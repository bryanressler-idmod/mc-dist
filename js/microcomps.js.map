{"version":3,"file":"microcomps.js","sources":["../src/comps/Constants.js","../src/comps/Logging.js","../src/comps/Entity.js","../src/comps/EntityCache.js","../src/io/SpatialBinary.js","../src/comps/FileTree.js","../node_modules/js-cookie/dist/js.cookie.mjs","../src/utils/Utils.js","../src/comps/Simulation.js","../src/comps/MicroCOMPS.js"],"sourcesContent":["export const VERSION=\"0.1.0\";\r\nexport const kDefaultBaseHostname = \"comps.idmod.org\";\r\nexport const kDefaultDevBaseHostname = \"comps-dev.idmod.org\";\r\nexport const kDefaultBaseUrl = \"https://comps.idmod.org\";\r\nexport const kDefaultDevBaseUrl = \"https://comps-dev.idmod.org\";\r\n\r\nexport const kLocalhostAliases = [\r\n  \"localhost\",\r\n  \"127.0.0.1\"\r\n];\r\n","//==============================================================================\r\n// Globals\r\n//==============================================================================\r\n/**\r\n * Global logger object to support static logging functions. By default\r\n * MicroCOMPS logs to the console. A replacement logger can be installed with\r\n * setGlobalLogger(). The replacement logger must have the same interface as\r\n * the JS console object.\r\n */\r\nlet gMicroCOMPSLogger = console;\r\n\r\n//==============================================================================\r\n// Logging function-API\r\n//==============================================================================\r\nfunction log(...args) { gMicroCOMPSLogger.log(...args); }\r\nfunction logInfo(...args) { gMicroCOMPSLogger.info(...args); }\r\nfunction logWarn(...args) { gMicroCOMPSLogger.warn(...args); }\r\nfunction logError(...args) { gMicroCOMPSLogger.error(...args); }\r\nfunction logObject(...args) { gMicroCOMPSLogger.log(...args); }\r\nfunction logClear(...args) { gMicroCOMPSLogger.clear(...args); }\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Set the global MicroCOMPS logger that is attached to the log*() functions.\r\n * @param logger\r\n */\r\nfunction setGlobalLogger(logger) {\r\n  gMicroCOMPSLogger = logger;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Returns the global logger object that handles the log*() functions.\r\n * @returns {*} - currently installed logger.\r\n */\r\nfunction getGlobalLogger() {\r\n  return gMicroCOMPSLogger;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// In the past Babel has had some trouble with 'export default class ...', but\r\n// worked with exports at the end of the file, so I'm using that convention.\r\nexport {log, logInfo, logWarn, logError, logObject, logClear, setGlobalLogger,\r\n  getGlobalLogger};\r\n","//==============================================================================\r\n// Entity\r\n// Base class maintains:\r\n// Data member    Description\r\n// -------------- -----------------------------------------------------------\r\n//   mc           MicroCOMPS instance\r\n//   id           id of current entity\r\n//   entityType   entityType (Simulation|Experiment|Suite|AssetCollection)\r\n//==============================================================================\r\n/**\r\n * Entity base class\r\n * @class\r\n * @property mc - our MicroCOMPS instance\r\n * @property id - the entity id\r\n * @property entityType - the entity type, e.g. \"Simulations\"\r\n */\r\nclass Entity {\r\n  constructor(mc, id, entityType) {\r\n    this.mc = mc;\r\n    this.id = id;\r\n    this.entityType = entityType;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return a human-readable string for this object\r\n   * @returns {string}\r\n   */\r\n  toString() {\r\n    return `[Entity: ${this.entityType}/${this.id}]`;\r\n  }\r\n}\r\n\r\nexport {Entity};\r\n","//==============================================================================\r\n// EntityCache - a cache for collected COMPS entity data\r\n//==============================================================================\r\nimport {assign} from \"lodash-es\";\r\nimport {logWarn} from \"./Logging\";\r\n\r\n//==============================================================================\r\n/**\r\n * EntityCache - a cache for collected COMPS entity data.\r\n * @class\r\n * @property caches - dict<entityType, dict<id, ent>>\r\n */\r\nclass EntityCache {\r\n  //----------------------------------------------------------------------------\r\n  // Constructor\r\n  //----------------------------------------------------------------------------\r\n  constructor() {\r\n    this.clear();\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get an entry from the cache given an entityType and an id.\r\n   * @param id - the id of the entity you're looking for\r\n   * @returns {object|undefined} - the entity data if found, else undefined\r\n   */\r\n  get(id) {\r\n    if (!id) return undefined;\r\n    if (this.has(id)) {\r\n      for (let key in this.caches) {\r\n        if (id in this.caches[key])\r\n          return this.caches[key][id];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Add an entity to the cache. Note that all COMPS entities carry their\r\n   * entityType around with them, so we can obtain it from the entity data.\r\n   * @param {Entity} entity - entity, e.g. sim object - must have an \"Id\" field\r\n   * @returns {boolean} - true if successful\r\n   */\r\n  add(entity) {\r\n    // Arg checks\r\n    if (!entity) return false;\r\n    let entityType = entity.entityType;\r\n\r\n    if (this.has(entity)) {\r\n      // Already in the cache. Not technically an error, but log it since it\r\n      // might be a caller programming error. In this case we'll assign over\r\n      // whatever's there, overlaying entity on the one in the cache\r\n      logWarn(`EntityCache.add: Ignoring attempt to re-add existing ` +\r\n        `sim ${entity.id}`);\r\n      // Layer on whatever they passed in * maybe should just return?\r\n      this.caches[entityType][entity.id] = assign(\r\n        this.caches[entityType][entity.id], entity);\r\n    } else {\r\n      // Not in the cache, so add it\r\n      this.caches[entityType][entity.id] = entity;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Remove an entity from the cache.\r\n   * @param entity - The entity you're removing, e.g. a Simulation object\r\n   * @returns {boolean} - true if successful\r\n   */\r\n  remove(entity) {\r\n    if (!entity) return false;\r\n    if (!this.has(entity)) {\r\n      logWarn(`EntityCache.remove: Ignoring attempt to remove non-cached ` +\r\n        `${entity.entityType}/${entity.id}`);\r\n      return false;\r\n    }\r\n    delete this.caches[entity.entityType][entity.id];\r\n    return true;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Check to see if an entity is in the cache. It can be called either with a\r\n   * string GUID id or an entity object reference.\r\n   * @param {string|Entity} idOrEnt - a string guid id or an Entity\r\n   * use the id argument.\r\n   * @returns {boolean} - true if cached, false if not\r\n   */\r\n  has(idOrEnt) {\r\n    const caches = [    // Search caches in this order\r\n      \"Simulations\", \"Experiments\", \"AssetCollections\", \"Suites\", \"WorkItems\" ];\r\n    if (!idOrEnt) return false;\r\n    if (typeof idOrEnt === \"string\") {\r\n      // id passed in\r\n      for (let key of caches) {\r\n        if (idOrEnt in this.caches[key])\r\n          return true;\r\n      }\r\n    } else if (typeof idOrEnt === \"object\") {\r\n      // entity reference passed in\r\n      return idOrEnt.id in this.caches[idOrEnt.entityType];\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Extend existing entity data with additional data. If the entity isn't in\r\n   * the cache I give the caller a break and add it for them.\r\n   * @param {Entity} entity - the entity to extend\r\n   * @param {object} additionalEntityData - data to layer onto the cached entity\r\n   * @returns {boolean} - true on success\r\n   */\r\n  extend(entity, additionalEntityData) {\r\n    if (!entity || !additionalEntityData) return false;\r\n    entity = assign(entity, additionalEntityData);\r\n    let entityType = entity.entityType;\r\n    if (!this.has(entity)) {\r\n      return this.add(entity);\r\n    } else {\r\n      this.caches[entityType][entity.id] = entity;  // Update cache\r\n      return true;\r\n    }\r\n }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Clear all entities of all types from the cache.\r\n   */\r\n  clear() {\r\n    this.caches = {\r\n      Simulations: {},\r\n      Experiments: {},\r\n      Suites: {},\r\n      WorkItems: {},\r\n      AssetCollections: {},\r\n    };\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Collect count statistics for all the caches, and a total. Given that the\r\n   * cache rarely has more than a dozen things in it, this is mostly for test.\r\n   * @returns {{AssetCollections: number, Simulations: number, total: number,\r\n   *  WorkItems: number, Experiments: number, Suites: number}} - the counts\r\n   */\r\n  getCounts() {\r\n    let result = {\r\n      total: 0,\r\n      Simulations: 0,\r\n      Experiments: 0,\r\n      Suites: 0,\r\n      WorkItems: 0,\r\n      AssetCollections: 0,\r\n    };\r\n    for (let key of Object.keys(this.caches)) {\r\n      let count = Object.keys(this.caches[key]).length;\r\n      result.total += count;\r\n      result[key] = count;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return a human-readable string for this object\r\n   * @returns {string}\r\n   */\r\n  toString() {\r\n    let total = 0;\r\n    for (let key of Object.keys(this.caches)) {\r\n      total += Object.keys(this.caches[key]).length;\r\n    }\r\n    let result = `[EntityCache: Total cached: ${total}. Caches:`;\r\n    for (let key of Object.keys(this.caches)) {\r\n      let count = Object.keys(this.caches[key]).length;\r\n      if (count > 0)\r\n        result += ` ${key.substring(0, 3)}s=${count}`\r\n    }\r\n    result += `]`;\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n// COMPS entity types and convenience shortcuts for the lazy library maintainer\r\nexport const kSimulations = \"Simulations\";\r\nexport const kSim = kSimulations;\r\nexport const kExperiments = \"Experiments\";\r\nexport const kExp = kExperiments;\r\nexport const kSuites = \"Suites\";\r\nexport const kSte = kSuites;\r\nexport const kWorkItems = \"WorkItems\";\r\nexport const kWI = kWorkItems;\r\nexport const kAssetCollections = \"AssetCollections\";\r\nexport const kAC = kAssetCollections;\r\nexport {EntityCache};\r\n","//==============================================================================\r\n// SpatialChannel object - wraps a spatial binary (adapted from Vis-Tools)\r\n//\r\n// This class wraps a spatial channel binary file, reformatting the data into a\r\n// form that allows random access by timestep, then by nodeId. The friendlyName\r\n// is just there for bookkeeping purposes - if you have on in your hand you\r\n// can't tell them apart.\r\n//==============================================================================\r\nimport { reduce } from \"lodash-es\";\r\n\r\n/**\r\n * SpatialBinary - a wrapper for EMOD *SpatialReport*.bin files.\r\n * @class\r\n */\r\nclass SpatialBinary {\r\n\r\n  /**\r\n   * SpatialBinary constuctor.\r\n   * @param {string} [friendlyName] - friendly name in case you've got > 1\r\n   */\r\n  constructor(friendlyName) {\r\n    if (friendlyName === undefined) friendlyName = \"None\";\r\n    this._realNodeIds = [];     // The ones in the file\r\n    this._nodeIds = [];         // The ones we really use, which c/b overrides\r\n    this._timestepRecs = {};    // C/b indexed like an array _timestepRecs[264]\r\n    this._timestepDomain = [ 0, 0 ];\r\n    this._valueMin = Number.MAX_VALUE;\r\n    this._valueMax = Number.MIN_VALUE;\r\n    this._friendlyName = friendlyName;    // For bookkeeping only\r\n\r\n    this._cache = {};   // We cache per-node data after we make it\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Accessors\r\n  //----------------------------------------------------------------------------\r\n  getDomain() { return [ this._valueMin, this._valueMax ]; }\r\n  getTimestepDomain() { return this._timestepDomain; }\r\n  getTimestepCount() { return Object.keys(this._timestepRecs).length; }\r\n  getNodeIds() { return this._nodeIds; }\r\n\r\n  //----------------------------------------------------------------------------\r\n  getValue(nodeId, timestep) {\r\n    if (this._nodeIds.indexOf(+nodeId) === -1) {\r\n      console.log(`SpatialBinary.getValue(): Invalid nodeId ${nodeId}`);\r\n      return NaN;\r\n    }\r\n    if (this.timestep < this._timestepDomain[0] ||\r\n        this.timestep > this._timestepDomain[1]) {\r\n      console.log(`SpatialBinary.getValue(): Invalid timestep ${nodeId} outside [${this._timestepDomain[0]},${this._timestepDomain[1]}]`);\r\n      return NaN;\r\n    }\r\n    return this._timestepRecs[timestep][nodeId];\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  getSummedValue(timestep) {\r\n    return this._timestepRecs[timestep].reduce((a, v) => a + v, 0);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  getValueUnchecked(nodeId, timestep) {\r\n    return this._timestepRecs[timestep][nodeId];\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // All these terrible data-override methods are here so that I can make the\r\n  // antique spatial binary format do what I need. It's in dire need of\r\n  // replacement, but for now I can sorta fix it up.\r\n  // Example: Any v11n that uses spatial binaries is also stuck with integer\r\n  // node ids.\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Provide binary data to this object. It is parsed synchronously.\r\n   * @param binData {ArrayBuffer} - the raw binary data from the wire\r\n   * @param [timestepOffset] {int} - starting timestep if not 0\r\n   * @param [overrideTimestepCount] {int} - truncate output to this if non-zero\r\n   * @param overrideNodeIds {int[]} - to read less than full data\r\n   */\r\n  setData(binData, timestepOffset=0, overrideTimestepCount=0, overrideNodeIds=[])\r\n  {\r\n    let dv = new DataView(binData);\r\n    let nodeCount = dv.getUint32(0, true);\r\n    let timestepCount = dv.getUint32(4, true);  // As read from file\r\n    if (overrideNodeIds.length > 0 && overrideNodeIds.length !== nodeCount)\r\n      return;\r\n    let i, offset = 8;\r\n    for (i = 0; i < nodeCount; i++)\r\n    {\r\n      let readValue = dv.getUint32(offset, true);\r\n      offset += 4;\r\n      const nodeId = overrideNodeIds.length > 0 ? overrideNodeIds[i] : readValue;\r\n      this._nodeIds.push(nodeId);\r\n    }\r\n    this._timestepRecs = {};\r\n\r\n    // Read (only) overrideTimestepCount * nodeCount floats\r\n    if (overrideTimestepCount === 0)\r\n      overrideTimestepCount = timestepCount;\r\n    for (i = 0; i < overrideTimestepCount; i++)\r\n    {\r\n      let timestepRec = {};\r\n      let timestep = i + timestepOffset;\r\n      for (let j = 0; j < nodeCount; j++)\r\n      {\r\n        let value = dv.getFloat32(offset, true);\r\n        timestepRec[this._nodeIds[j]] = value;\r\n        offset += 4;\r\n        if (i === 0) {\r\n          this._valueMin = value;\r\n          this._valueMax = value;\r\n        } else {\r\n          if (value > this._valueMax) this._valueMax = value;\r\n          if (value < this._valueMin) this._valueMin = value;\r\n        }\r\n      }\r\n      this._timestepRecs[timestep] = timestepRec;\r\n    }\r\n    this._timestepDomain = [ timestepOffset, timestepOffset + timestepCount - 1 ];\r\n    return this;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get an array of floats, one per timestep, for the given nodeId\r\n   * @param {int} nodeId - Must be convertable to int b/c of SpatialBinary fmt\r\n   * @returns {float[]} - Or empty array if nodeId not found.\r\n   */\r\n  getTimeseriesForNode(nodeId) {\r\n    nodeId = +nodeId;\r\n    if (this._nodeIds.indexOf(nodeId) === -1) return [];\r\n\r\n    // If it's in the cache, return that\r\n    if (nodeId in this._cache)\r\n      return this._cache[nodeId];\r\n\r\n    // Otherwise build it\r\n    let instance = this;\r\n    let result = [];\r\n    const timesteps = Object.keys(this._timestepRecs).map(k => +k);\r\n    timesteps.forEach(timestep => {\r\n      result.push(instance._timestepRecs[timestep][nodeId]);\r\n    });\r\n\r\n    // Cache it\r\n    this._cache[nodeId] = result;\r\n\r\n    return result;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get an array values at this timestep.\r\n   * @param timestep - timestep at which to obtain values\r\n   * @returns {float[]} - array of float values at timestep, one per node\r\n   */\r\n  getValuesAtTimestep(timestep) {\r\n    if (timestep < this._timestepDomain[0] ||\r\n        timestep > this._timestepDomain[1])\r\n      return [];\r\n    return this._timestepRecs[+timestep];\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get a timeseries where each value is the sum of values across all nodes\r\n   * @returns {float[]} - timeseries where each value is sum across all nodes\r\n   */\r\n  getTimeseriesSumOverNodes() {\r\n    let instance = this;\r\n    const timesteps = Object.keys(this._timestepRecs).map(k => +k);\r\n    return timesteps.map(timestep =>\r\n      // instance._timestepRecs[timestep] is an object keyed on the node ids\r\n      // Lodash reduce on an object iterates every v, k pair in the object.\r\n      // There is no key,value iterator for Object, so using lodash's reduce.\r\n      reduce(instance._timestepRecs[timestep], (a, v, k) => a + v), 0);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Calculate the [ min, max ] domain of the sum across all nodes x timesteps\r\n   * @returns {number[]} - [ min, max ] across all timesteps and nodes\r\n   */\r\n  getSummedDomain() {\r\n    let ts = this.getTimeseriesSumOverNodes();\r\n    // This reduce emits [ min, max ] of the totals across nodes\r\n    return ts.reduce((a, v) => {\r\n      return a === null ?\r\n        [ v, v ] :\r\n        [ v < a[0] ? v : a[0], v > a[1] ? v : a[1] ];\r\n    }, null);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Given a local path to a spatial binary, extract a friendly-looking channel\r\n   * name.\r\n   * @example\r\n   * localSpatialPathToChannelName(\"output/SpatialReport_Daily_EIR.bin\")\r\n   * // returns \"Daily EIR\"\r\n   * @param {string} localPath - the path to prettify\r\n   * @returns {string} - a friendly channel name\r\n   */\r\n  static localSpatialPathToChannelName(localPath) {\r\n    const marker = \"SpatialReport_\";\r\n    const ext = \".bin\";\r\n    const idx = localPath.indexOf(marker);\r\n    let label = idx === -1 ?\r\n      localPath : localPath.substring(idx + marker.length);\r\n    if (label.endsWith(ext))\r\n      label = label.substring(0, label.length - ext.length);\r\n    label = label.replace(\"_\", \" \");\r\n    return label;\r\n  }\r\n\r\n}\r\n\r\nexport {SpatialBinary};\r\n","import {forEach} from \"lodash-es\";\r\nimport {SpatialBinary} from \"../io/SpatialBinary\";\r\n\r\n//==============================================================================\r\n// FileRec\r\n//==============================================================================\r\n/**\r\n * FileRec file record class\r\n * @property {string} FriendlyName - The user-friendly name of the file/dir\r\n * @property {string} Id - Unique id for this file/dir object (a GUID)\r\n * @property {(fileRec[]|null)} Items - Child items, for Type === \"Directory\"\r\n *  Null for files.\r\n * @property {(number|null)} Length - File size in bytes for Type === \"File\"\r\n *  Null for directories.\r\n * @property {string} MimeType - The MIME type for this file, e.g. \"text/plain\"\r\n * @property {string} PathFromRoot - The directory part of the path, e.g.\r\n *  for the file output/InsetCharts.json, PathFromRoot is \"output\"\r\n * @property {(\"File\"|\"Directory\")} Type - Either \"File\" or \"Directory\"\r\n * @property {(string|null)} Url - the COMPS Asset Manager URL to this file\r\n */\r\nexport class FileRec {\r\n  /**\r\n   * Constructor - generally not used. These records are normally returned by\r\n   * the comps api or they are conjured from the results of comps api calls that\r\n   * return a different but similar record for files, and that is also the\r\n   * reason for the UpperCamelCase field names here. MicroCOMPS normalizes all\r\n   * files (including output and asset files if present) in the tree with\r\n   * homogenous records like these. File and directory names are case-sensitive.\r\n   */\r\n  constructor() {\r\n    this.FriendlyName = null;       // Display name for file\r\n    this.Id = null;                 // Id of file (used by comps internally)\r\n    this.Items = [/*FileRecs*/];    // Child items, if type is \"Directory\" or []\r\n    this.Length = 0;                // Length of this file in bytes if File\r\n    this.MimeType = \"text/plain\";   // MIME type for this file\r\n    this.PathFromRoot = \"\";         // File's path from the sim root directory\r\n    this.Type = \"File\";             // File or Directory\r\n    this.Url = \"\";                  // AM URL for direct access to this file\r\n  }\r\n}\r\n\r\n//==============================================================================\r\n// FileTree\r\n//==============================================================================\r\n/**\r\n * FileTree hold a tree of FileRecs rooted at this.root. It also maintains a\r\n * reference to MicroCOMPS allowing it to do i/o on the tree's files.\r\n * @property {MicroCOMPS} mc - reference to MicroCOMPS object\r\n * @property {[FileRec]} root - the root of the file tree\r\n * @property {FileRec} rootNode - the root of the file tree, as a FileRec\r\n */\r\nexport class FileTree {\r\n  //----------------------------------------------------------------------------\r\n  // Constants\r\n  //----------------------------------------------------------------------------\r\n  static get kWithDirs() { return true; }\r\n  static get kNoDirs() { return false; }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Constructor\r\n  //----------------------------------------------------------------------------\r\n  constructor(mc, root) {\r\n    this.mc = mc;\r\n    this.root = root;\r\n    this.rootNode = this._makeRootNode(root);\r\n    this.listingDirs = null;      // Lazy-created, use getFileList()\r\n    this.listingNoDirs = null;    // Lazy-created, use getFileList()\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Tests for the presence of a local path in the file tree.\r\n   * @param path - file to look for\r\n   * @returns {boolean} - true if the file is present, false if not.\r\n   */\r\n  contains(path) {\r\n    path = this.regularizePath(path);\r\n    const listing = this.getFileList(FileTree.kWithDirs);\r\n    return listing.indexOf(path) !== -1;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns a promise for the bytes of the file at the given local path.\r\n   * @example\r\n   * tree.getFile(\"output/InsetChart.json\")\r\n   *   .then(fileContents => drawCharts(fileContents))\r\n   *   .catch((err) => logError(\"Failed to get inset chart file.\");\r\n   * @example\r\n   * let fileRec = tree.findFileRec(\"output/InsetChart.json\");\r\n   * tree.getFile(fileRec)\r\n   *  .then(fileContents => drawCharts(fileContents))\r\n   *   .catch((err) => logError(\"Failed to get inset chart file.\");\r\n   * @param {string|FileRec} pathOrFileRec - the local path of the file to obtain, like\r\n   *  \"output/list.json\", OR a FileRec object.\r\n   * @returns {Promise<*>} - promise for the file data\r\n   */\r\n  getFile(pathOrFileRec, responseType=\"text\") {\r\n    let fr = null;\r\n    if (typeof pathOrFileRec === \"object\" && \"Url\" in pathOrFileRec)\r\n      fr = pathOrFileRec;\r\n    else {\r\n      if (!pathOrFileRec.startsWith(\".\"))\r\n        pathOrFileRec = \"./pathOrFileRec\";\r\n      fr = this.findFileRecord(pathOrFileRec);\r\n    }\r\n    if (!fr) {\r\n      return Promise.reject(\r\n        { message: `ERROR: FileTree.getFile: Couldn't find file ${pathOrFileRec}.` }\r\n      );\r\n    }\r\n    return this.mc.request(fr.Url, responseType);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns a single promise for the contents of all the provided local paths.\r\n   * The promise resolves to an array of file contents, ordered in the same\r\n   * order as the input paths. The primary benefit of this function is that it\r\n   * requests all the files in parallel, fails if any fetch fails, and succeeds\r\n   * only after all the files are read.\r\n   * @example\r\n   * let insetData, populationData;\r\n   * tree.getFiles([\"output/InsetChart.json\", \"output/SpatialReport_Population.bin\"])\r\n   *   .then(fileContentsArray => {\r\n   *     insetData = fileContentsArray[0];\r\n   *     populationData = fileContentsArray[1];\r\n   *   })\r\n   *   .catch(() => logError(\"Couldn't fetch files.\"));\r\n   * @param {[string]} pathArray - an array of local paths (a single string path is ok too)\r\n   * @param {string} responseType - optional - responseType to use for all files\r\n   * @returns {Promise<*>} - promise for an array of all files data\r\n   */\r\n  getFiles(pathArray, responseType=\"text\") {\r\n    if (typeof pathArray === \"string\")\r\n      pathArray = [pathArray];\r\n    let self = this;\r\n    let mc = this.mc;\r\n\r\n    // Make sure we can find the file record for each file\r\n    let frs = pathArray.map(path => self.findFileRecord(path));\r\n    // The above map() will faithfully put nulls in frs on failures\r\n    if (frs.indexOf(null) !== -1) {\r\n      return Promise.reject({ message:\r\n        `ERROR: FileTree.getFiles: One or more files records not found. ` +\r\n        `${JSON.stringify(frs, null, \"  \")}`});\r\n    }\r\n\r\n    // Sometimes functional programming is pretty\r\n    return Promise.all(frs.map(fr => mc.request(fr.Url, responseType)));\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Attempts to locate the FileRec for a given file by local path. Returns a\r\n   * ref to the FileRec or null. If the given path ends in \"/\", the function\r\n   * returns the *directory* entry matching path, rather than a file entry.\r\n   * @example\r\n   * let fr = tree.findFileRecord(\"output/InsetCharts.json\")\r\n   * if (fr) {\r\n   *   console.log(`Inset chart url is ${fr.Url});\r\n   * } else logError(\"Couldn't find file rec.\");\r\n   * @param path - local path to the file in question\r\n   * @returns {FileRec|null} - the found file record or null\r\n   */\r\n  findFileRecord(path) {\r\n    let result = null;\r\n    path = this.regularizePath(path);\r\n\r\n    // Note whether we're looking for a file or dir record\r\n    const targetIsFolder = (path.endsWith(\"/\"));\r\n\r\n    let targetPath = `${path}${targetIsFolder ? \"/\" : \"\"}`;\r\n    let self = this;\r\n    this.traverse(fr => {\r\n      let frPath = self.regularizedPathFromFileRec(fr);\r\n      if (frPath === targetPath) {\r\n        result = fr;\r\n        return false;   // Explicit false stops traversal\r\n      } // else keep iterating\r\n    }, targetIsFolder ? FileTree.kWithDirs : FileTree.kNoDirs);\r\n    return result;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Signature for the lambda used in traverse\r\n   * @callback traverseLambda\r\n   * @param {fileRec} fileOrDirRec - the present file/dir record\r\n   * @param {fileRec[]} coll - the subtree, that is, the array of our siblings.\r\n   * @returns {boolean} - if callback explicitly returns false, iteration is\r\n   * halted. Any other return value is ignored and iteration continues.\r\n   */\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Does a depth-first traversal of the file tree, calling the given lambda on\r\n   * every file (and directory if withDirs is true). This can be used for\r\n   * scanning or listing a sim's files, etc. The withDirs argument determines\r\n   * whether the lambda will be called for FileRecs that have type \"Directory.\"\r\n   * If the flag is false Directory FileRecs are ignored, and the lambda is only\r\n   * called with FileRecs of type \"File\". The lambda may return false to stop\r\n   * traversal immediately. If the return value is omitted or any other value,\r\n   * traversal continues.\r\n   *\r\n   * NOTE: This function is recursive.\r\n   *\r\n   * The lambda signature is given formally above, but in summary:\r\n   * lambda(fileRec, fileOrDirRec)\r\n   * @example\r\n   * // Count the FileRecs in the tree that represent files without dirs\r\n   * let count = 0;\r\n   * tree.traverse(fr => count++, kNoDirs);\r\n   * @example\r\n   * // This is equivalent to tree.findFileRec(\"output/InsetChart.json\")\r\n   * // because it returns the first matching file by basename\r\n   * // (InsetChart.json), but could find others with the same name.\r\n   * let insetFileRec;\r\n   * tree.traverse((fr, fl) => {\r\n   *    if (fr.FriendlyName === \"InsetChart.json\") []\r\n   *      insetFileRec = fr;\r\n   *      return false;       // We found what we want, stop iteration\r\n   *      }\r\n   * }, kNoDirs);   * @param lambda - a function to be executed on all FileRecs in the tree\r\n   * @param {traverseLambda} lambda - a function to be executed on all elements\r\n   * @param withDirs - kWithDirs (true) for dir recs too, or kNoDirs\r\n   * @returns void - no return value\r\n   */\r\n  traverse(lambda, withDirs=false) {\r\n    this._traverseImpl(this.root, lambda, withDirs);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /** Calculate the number of files and total size of the tree.\r\n   * @returns {[number,number]} - [ fileCount, sizeInBytes ]\r\n   */\r\n  count() {\r\n    let count = 0;\r\n    let size = 0;\r\n    if (!this.root)\r\n      return [0, 0];\r\n    this.traverse(fr => { count++; size += fr.Length; });\r\n    return [count, size];\r\n  }\r\n\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns a flat file listing of the simulation with paths.\r\n   * @param {boolean} withDirs - whether Directory frs are in the output or not\r\n   * @returns {[string]} - the flattened file list with full paths\r\n   */\r\n  getFileList(withDirs = FileTree.kNoDirs) {\r\n    if (this.listingDirs && this.listingNoDirs)\r\n      return withDirs ? this.listingDirs : this.listingNoDirs;\r\n\r\n    // Populate the two listings simultaneously\r\n    let listWithDirs = [\"./\"];\r\n    let listNoDirs = [];\r\n    let self = this;\r\n    this.traverse(fr => {\r\n      let frPath = self.regularizedPathFromFileRec(fr);\r\n      if (fr.Type === \"Directory\") frPath += \"/\";\r\n\r\n      // Process directories and files\r\n      if (fr.Type === \"Directory\") {     // Directory line\r\n        if (withDirs) {\r\n          listWithDirs.push(frPath);\r\n        } else {\r\n          // Skip directory lines if withDirs is false\r\n        }\r\n      } else {                           // File line\r\n        listNoDirs.push(frPath);\r\n        listWithDirs.push(frPath);\r\n      }\r\n    }, FileTree.kWithDirs);\r\n    listWithDirs.sort();\r\n    this.listingDirs = listWithDirs;\r\n    this.listingNoDirs = listNoDirs;\r\n\r\n    return withDirs ? this.listingDirs : this.listingNoDirs;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Validate a list of local paths, removing any that are not present in the\r\n   * file tree. This is great for when you have a list of *candidate* files, but\r\n   * they're not always present in every sim.\r\n   * @param localPathArray - list of sim-local paths,\r\n   * @returns {[string]} - only the valid local paths from localPathArray or []\r\n   */\r\n  validateFileList(localPathArray) {\r\n    const listing = this.getFileList(FileTree.kNoDirs);\r\n    let result = [];\r\n    localPathArray.forEach(lp => {\r\n      if (!lp.startsWith(\".\"))   // Make local paths start with ./\r\n        lp = \"./\" + lp;\r\n      if (lp.endsWith(\"/\"))       // Drop directory-only requests\r\n        return;\r\n      if (listing.indexOf(lp) === -1)   // File not found? Continue\r\n        return;\r\n      result.push(lp);            // Ok we've got this one, transfer to result\r\n    });\r\n    return result;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Extract a regularized sim-local file path from the given FileRec.\r\n   * @param fileRec - the FileRec for which we want a path\r\n   * @returns {string} - a regularized path, e.g. ./runtime/InsetChart.json\r\n   */\r\n  regularizedPathFromFileRec(fileRec) {\r\n    let frPath = this.regularizePath(\r\n      `${fileRec.PathFromRoot}/${fileRec.FriendlyName}`);\r\n    if (fileRec.Type === \"Directory\")\r\n      frPath += \"/\";\r\n    return frPath;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Regularize a sim-local file path. This means it uses '/' for separators,\r\n   * and starts with './'.\r\n   * @param path - path to regularize\r\n   * @returns {string} - regularized path\r\n   */\r\n  regularizePath(path) {\r\n    path = path.replace(\"\\\\\" ,\"/\");\r\n    if (path.startsWith(\"/\"))\r\n      path = path.substring(1);\r\n\r\n    // Make all paths start with ./\r\n    if (path === \".\")\r\n      path = \"./\";\r\n    else if (!path.startsWith(\".\"))\r\n      path = \"./\" + path;\r\n\r\n    return path;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns a flat array of file paths for *SpatialReport*.* files in sim.\r\n   * @returns {[string]} - array of SpatialReport file sim-local file paths.\r\n   */\r\n  getSpatialReportList() {\r\n    let keepers = [];\r\n    const list = this.getFileList();\r\n    list.forEach(localPath => {\r\n      if (localPath.indexOf(\"SpatialReport\") !== -1)\r\n        keepers.push(localPath);\r\n    });\r\n    return keepers;\r\n  }\r\n\r\n  /**\r\n   * Load all SpatialReport* files into memory. Returns a promise for an object\r\n   * { filePath1: SpatialBinary1, filePath2: SpatialBinary2, ... } where in the\r\n   * keys are the file names and the values are SpatialBinary object initialized\r\n   * on the data. These files can be big, and I unpack them here too, so expect\r\n   * this to take a while.\r\n   * @async\r\n   * @returns {Promise<{}>} - an obj with filename keys and SpatialBinary values\r\n   */\r\n  //----------------------------------------------------------------------------\r\n  getAllSpatialReports() {\r\n    const keepers = this.getSpatialReportList();\r\n    if (keepers.length === 0)\r\n      return Promise.resolve({});\r\n    return this.getFiles(keepers, \"arraybuffer\")\r\n      .then(fileContentsArray => {\r\n        let result= {};\r\n        keepers.forEach((fn, i) => {\r\n          const sb = new SpatialBinary(fn);\r\n          sb.setData(fileContentsArray[i]);\r\n          result[fn] = sb;\r\n        });\r\n        return Promise.resolve(result);\r\n      });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return a human-readable string for this object\r\n   * @returns {string} - a simple text rep of the file tree object\r\n   */\r\n  toString() {\r\n    const stats = this.count();\r\n    return `[FileTree: ${this.root ?\r\n      `${stats[0].toLocaleString()} files, ${stats[1].toLocaleString()} bytes` :\r\n      \"not present\" }]`;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Implementation\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Recursive implementation for findFileRecord.\r\n   * @param files - list of files at the current directory level\r\n   * @param path - the path we're looking for\r\n   * @returns {false|void} - false when found, no return otherwise\r\n   * @private\r\n   */\r\n  _findFileRecordImpl(files, path) {\r\n    let self = this;\r\n\r\n    // Is the caller looking for a file or a directory?\r\n    let targetIsDir = path.endsWith(\"/\");\r\n    if (targetIsDir) {\r\n      // We're processing a file\r\n      return files.find(rec =>\r\n        (rec.Type === \"File\" || rec.Type === \"SymLinkFile\") &&\r\n        path === self.regularizedPathFromFileRec(rec));\r\n    } else {\r\n      // We're processing a directory\r\n      let frPath = self.regularizedPathFromFileRec(files);\r\n      if (path === frPath)\r\n        return false;\r\n      else return self._findFileRecordImpl(files.Items, path);\r\n    }\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Recursive innards of traverse. Used internally.\r\n   * @param files - the current file list\r\n   * @param lambda - the function to be applied to each file record\r\n   * @param withDirs - flags whether dir file recs are considered\r\n   * @returns void - no return value\r\n   * @private\r\n   */\r\n  _traverseImpl(files, lambda, withDirs=false) {\r\n    let self = this;\r\n    let bugout = false;\r\n    // First find and run the lambda on all the files in this directory\r\n    const pofs = files.filter(rec =>\r\n      rec.Type === \"File\" || rec.Type === \"SymLinkFile\");\r\n    forEach(pofs, (pof, index, coll) => {\r\n      if (lambda(pof, coll) === false) {\r\n        bugout = true;\r\n        return false;   // Makes _ exit immediately\r\n      }\r\n      //else...I don't care about any other value\r\n    });\r\n    if (bugout) return; // Lambda says we're done\r\n\r\n    // Now find and run the lambda on all the directories in this directory\r\n    const dirs = files.filter(rec =>\r\n      rec.Type === \"SymLinkDirectory\" || rec.Type === \"Directory\");\r\n    forEach(dirs, (dir, index, coll) => {\r\n      // If the \"withDirs\" flag is set, call the lambda on the dirs too\r\n      if (withDirs) {\r\n        if (lambda(dir, coll) === false) {\r\n          return false;   // Makes _ exit immediately\r\n        }\r\n      }\r\n      // Recurse on it\r\n      self._traverseImpl(dir.Items, lambda, withDirs);\r\n    });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Create a synthetic FileRec to wrap the root FileRec array. This makes\r\n   * interop with things like @mui/labs <TreeView/> easier. See the React demo.\r\n   * @param items - the root FileRec array\r\n   * @returns {FileRec} - A synthetic FileRec with its Items set to items\r\n   * @private\r\n   */\r\n  _makeRootNode(items) {\r\n    return {\r\n      Id: \"/\",\r\n      Type: \"Directory\",\r\n      Items: items,\r\n      FriendlyName: \"/\",\r\n      PathFromRoot: \"\",\r\n      Length: null,\r\n      MimeType: \"none/none\",\r\n      Url: \"\",\r\n    };\r\n  }\r\n\r\n} // class FileTree\r\n\r\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","// Soon this file will probably get broken down into multiple topical files.\r\n\r\n//==============================================================================\r\n// Utils - various loose functions of general use.\r\n//==============================================================================\r\nimport Cookies from \"js-cookie\";\r\nimport {isArray, isString, merge, set} from \"lodash-es\";\r\nimport {kLocalhostAliases} from \"../comps/Constants\";\r\nimport {logError} from \"../comps/Logging\";\r\n\r\n// Utility categories. Use these to search for the section heading\r\n// Strings\r\n// Arrays\r\n// Objects\r\n// Events\r\n// Cookies\r\n// DOM+WebComponents\r\n// Colors\r\n// Paths\r\n// Network\r\n// Inset\r\n// Geospatial\r\n\r\n//==============================================================================\r\n// Strings\r\n//==============================================================================\r\n/**\r\n * Converts a string to title case, e.g. \"read the docs\" => \"Read The Docs\".\r\n * q.v. [Stack Overflow]{@link https://stackoverflow.com/a/196991}\r\n * @param {string} str - the string to titleCase\r\n * @returns {string} - the titlecased string\r\n */\r\nexport function toTitleCase(str) {\r\n  return str.replace(/\\b\\w+/g, txt =>\r\n    txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase());\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Convert a COMPS token to a string optimized for human readability.\r\n * @param {string} token - the COMPS token you want to display\r\n * @returns {string} - a prettified string for the token\r\n */\r\nexport function tokenToString(token) {\r\n  let parts = token.split(\",\");\r\n  if (parts.length < 6) return \"[unparsable token]\";\r\n  return `COMPS token for ${parts[2]}@${parts[5]}, good until ${parts[6]}`\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Generate a new GUID. Borrowed verbatim from COMPS.\r\n * @returns {string} - guid in 36-character string format\r\n */\r\nexport function generateGuid() {\r\n  let now = Date.now();\r\n  // stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n  let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    let r = (now + Math.random() * 16) % 16 | 0;\r\n    now = Math.floor(now / 16);\r\n    let modR = (r & 0x3) | 0x8; // Unnecessary parens added for eslint\r\n    return (c === \"x\" ? r : modR).toString(16);\r\n  });\r\n  return guid;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Check the validity of a given GUID. Just checks for syntactic validity, not\r\n * whether the guid represents any COMPS entity.\r\n * @param val - the potential GUID to be checked, tolerant of null/undef\r\n * @returns {boolean} - true if a valid-looking guid, false if not\r\n */\r\nexport function isValidGuid(val) {\r\n  if (!val || typeof val !== \"string\" || val.length === 0) return false;\r\n  let guid = val.trim();\r\n  if (guid.length !== 36)\r\n    return false;\r\n  let pat = /^(((?=.*}$){)|((?!.*}$)))((?!.*-.*)|(?=(.*[-].*){4}))[0-9a-fA-F]{8}[-]?([0-9a-fA-F]{4}[-]?){3}[0-9a-fA-F]{12}?[}]?$/;\r\n  return guid.match(pat) !== null;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Generate a human-readable version of a COMPS token for debugging/logging.\r\n * @param {string} token - optional token obtained from the COMPS auth-lib\r\n * @returns {string|*} - a string like \"[user@xx.xx.xx.xx for apps until date]\"\r\n */\r\nexport function humanizeToken(token) {\r\n  if (!token) return \"[No token]\";\r\n  let parsed;\r\n  try {\r\n    parsed = token.split(\",\");\r\n    // [0]: \"1\"\r\n    // [1]: \"Ḁuth\"\r\n    // [2]: \"bressler\"\r\n    // [3]: \"10.24.14.11\"\r\n    // [4]: \"p-5wwHRZLd7niPlE9NLYMUyiX2VrCzvjgwC4O-Zm_I8.\"\r\n    // [5]: \"IDMSPAPP01\"\r\n    // [6]: \"2022-09-21-23-08-55\"\r\n    // [7]: \"2022-09-21-19-08-55\"\r\n    // [8]: \"...base64...\"\r\n    let exp = parsed[6];\r\n    if (exp) {\r\n      let m = exp.match(/(\\d{4})-(\\d{2})-(\\d{2})-(\\d{2})-(\\d{2})-(\\d{2})/);\r\n      if (m) {\r\n        exp = new Date(\r\n          Date.parse(`${m[1]}-${m[2]}-${m[3]} ${m[4]}:${m[5]}:${m[6]}`))\r\n          .toLocaleString();\r\n      }\r\n      return `[${parsed[2]}@${parsed[5]} until ${exp}]`;\r\n    } else return \"[Token details unknown]\"\r\n  }\r\n  catch(err) {\r\n    logError(\"Utils.humanizeToken: unparseable token\");\r\n    console.log(err);\r\n  }\r\n  return \"[Token details unknown]\";  // Can happen if a fake token comes in\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Clean up an COMPS-Auth-style baseurl into the format we want\r\n * (without the /api/ suffix.)\r\n * @param url {string} url - url to clean\r\n * @returns {string} - cleaned url\r\n */\r\nexport function cleanBaseUrl(url) {\r\n  if (url.endsWith(\"/\"))\r\n    url = url.substring(0, url.length - 1);\r\n  if (url.endsWith(\"/api\"))\r\n    url = url.substring(0, url.length - 4);\r\n  return url;\r\n}\r\n\r\n//==============================================================================\r\n// Arrays\r\n//==============================================================================\r\n/**\r\n * Emit a new array with newEntry appended iff newEntry is not already in the\r\n * array. Tne compare function compares newEntry for equality. If compare is\r\n * now passed in, the shallowCompare function is used.\r\n * NOTE: This function is deliberately inefficient - it returns a copy of arr\r\n * with the new entry appended. This is because in React you need to replace\r\n * objects in state to trigger effects.\r\n * @param {[object]} arr - the initial array\r\n * @param {object} newEntry - the object to be appended\r\n * @param {function} compare [optional}\r\n * @returns {*|*[]} - a new array with newEntry appended or arr if already there\r\n */\r\nexport function appendIfUnique(arr, newEntry, compare=shallowCompare) {\r\n  const found = arr.find(entry => compare(entry, newEntry));\r\n  return found ? arr : [ ...arr, newEntry ];\r\n}\r\n\r\n//==============================================================================\r\n// Objects\r\n//==============================================================================\r\n/**\r\n * Shallow-compare two objects for equality. To be equal, two objects must:\r\n *   1. Have the same number of keys\r\n *   2. Have the same keys\r\n *   3. Have the same types for the values of each key\r\n *   4. Have equivalent values (with ===) for each key\r\n * There are cases that will not be detected by this simple algorithm, but it\r\n * is good enough for most cases. (E.g. -0 and 0 are treated as equivalent.)\r\n * @param o1 - first object to compare\r\n * @param o2 - second object to compare\r\n * @returns {boolean} - true if o1 and o1 are equal on shallow comparison\r\n */\r\nexport function shallowCompare(o1, o2) {\r\n  const o1Keys = Object.keys(o1);\r\n  const o2Keys = Object.keys(o2);\r\n  if (o1Keys.length !== o2Keys.length)\r\n    return false;\r\n  for (const propName of o1Keys) {\r\n    if (!o2.hasOwnProperty(propName))\r\n      return false;\r\n    if (typeof o1[propName] !== typeof o2[propName])\r\n      return false;\r\n    if (o1[propName] !== o2[propName])\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Given an object, recursively builds a linear list of fully-qualified key\r\n * names and values in an object. That is to say, the output object is unnested.\r\n * IMPORTANT: This function specifically copies array values as-is, rather than\r\n * splay them out, and this is a minor optimization that reduces the size of the\r\n * output flattened obj for our most common use cases.\r\n * @example\r\n * flattenedObject({ a: [ 42, 28 ] })\r\n *  =>    // ACTUALLY returns\r\n *  {\r\n *    a: [42, 28],\r\n *  }\r\n *\r\n *  => {  // DOES NOT return\r\n *    a.1 = 42\r\n *    a.2 = 28\r\n *  }\r\n * @note This function is recursive.\r\n * @param {object} obj - the (possibly complicated) target object\r\n * @returns {object} - the flattened key/value list\r\n */\r\nexport function flattenObject(obj) {\r\n  let result = {};\r\n\r\n  for (let objKey in obj) {\r\n    if (!obj.hasOwnProperty(objKey))\r\n      continue;\r\n\r\n    let valType = typeof obj[objKey];\r\n    if (isArray(obj[objKey])) {\r\n      result[objKey] = obj[objKey];\r\n    } else if (valType === 'object' && obj[objKey] !== null) {\r\n      let flatObject = flattenObject(obj[objKey]);\r\n      for (let flatObjectKey in flatObject) {\r\n        if (!flatObject.hasOwnProperty(flatObjectKey))\r\n          continue;\r\n        result[objKey + '.' + flatObjectKey] = flatObject[flatObjectKey];\r\n      }\r\n    } else {\r\n      result[objKey] = obj[objKey];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Overlay one object's properties with extra. Does not *replace* keys, just\r\n * adds new or modifies existing keys in the destination.\r\n * Test object for your amusement:\r\n * x = { a: { a1: 1, a2: \"2\", a3: null }, b: 42, c: { c4: 4, c5: \"5\", c6: { c67: 67, c68: \"68\", c69: [ 6, 7, 8, 9 ] } }, d: \"howdy\", e: [ 42, 28 ], f: null }\r\n * @param {object} obj - the destination object getting overlaid\r\n * @param {object} extra - the extra stuff to layer on\r\n * @returns {object}\r\n */\r\nexport function overlayObject(obj, extra) {\r\n  let flattened = flattenObject(extra);\r\n  for (let flatKey in flattened) {\r\n    set(obj, flatKey, flattened[flatKey]);\r\n  }\r\n  return obj;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Overlay an array of sources onto dest. See overlayObject for details.\r\n * @param dest - The object accepting updated properties\r\n * @param sourceArray - An array of object with replacement properties\r\n * @returns {[object]} - dest with all of sourceArray overlaid on it\r\n */\r\nexport function overlayObjects(dest, sourceArray) {\r\n  sourceArray.map(source => overlayObject(dest, source));\r\n  return dest;\r\n}\r\n\r\n//==============================================================================\r\n// Events\r\n//==============================================================================\r\n/**\r\n * Stop propagation and prevent default on an event.\r\n * @param {Event} evt - the event to halt\r\n * @returns void\r\n */\r\nexport function stopEvent(evt) {\r\n  if (typeof evt !== \"object\" || evt === null || evt === undefined) return;\r\n  if (\"stopPropagation\" in evt)\r\n    evt.stopPropagation();\r\n  if (\"preventDefault\" in evt)\r\n    evt.preventDefault();\r\n}\r\n\r\n//==============================================================================\r\n// Cookie\r\n// These functions are thin veneer on js-cookie, but these functions add a bit\r\n// of value with encode/decode and lambda.\r\n//==============================================================================\r\n/**\r\n * A simple chimney to Cookies library, but adds useful default arg.\r\n * @param {string} keyName - the name of the cookie key, e.g. \"\r\n * @param {*} dflt - a default value in case keyName is not found\r\n * @param {boolean} decode - true to decodeURIComponent. default: false\r\n * @returns {*} - the cookie value or the default\r\n * @example\r\n * // This attempts to get the COMPS theme from the cookie, and defaults to \"light\"\r\n * // if the key is not found.\r\n * let theme = getCookie(\"explore.contentExhibit.theme\", \"light\");\r\n */\r\nexport function getCookie(keyName, dflt, decode=false) {\r\n  let result = Cookies.get(keyName);\r\n  if (result === undefined)\r\n    result = dflt;\r\n  else if (decode)\r\n    result = decodeURIComponent(result);\r\n  return result;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Set a cookie key/value pair. Chimney to Cookies library, but adds a default\r\n * one-year expiration if not provided.\r\n * @param {string} keyName - the cookie key name to use\r\n * @param {string} value - the value, will be converted to string\r\n * @param {number} exDays - the lifetime of the cookie in days. Default: 365\r\n * @param {boolean} encode - true to run encodeURIComponent. default: false\r\n * @returns void\r\n */\r\nexport function setCookie(keyName, value, exDays=365, encode=false) {\r\n  if (typeof exDays === \"boolean\") {\r\n    // Caller left out the exDays arg\r\n    encode = exDays;\r\n    exDays = 365;\r\n  }\r\n  if (encode)\r\n    Cookies.set(keyName, encodeURIComponent(value), { expires: exDays });\r\n  else Cookies.set(keyName, value, { expires: exDays });\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Run a lambda expression on each cookie key-value pair.\r\n * Lambda signature: void fn(key, value, collection);\r\n * @param {function} lambda - the function to run on each cookie entry.\r\n * @returns void\r\n */\r\nexport function forEachCookie(lambda) {\r\n  let entries = Cookies.get();\r\n  Object.keys(entries).forEach(key => lambda(key, entries[key], entries));\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Delete the cookie entry with the given name from the cookie.\r\n * @param keyName - cookie key name to delete\r\n */\r\nexport function deleteCookie(keyName) {\r\n  Cookies.remove(keyName);\r\n}\r\n\r\n//==============================================================================\r\n// DOM+WebComponents\r\n//==============================================================================\r\n/**\r\n * This boilerplate function registers a custom element w/o *re*-registering.\r\n * @param {string} tagName - the new tag name you're registering, e.g \"box-plot\"\r\n * @param {Class} handlerClass - the class that implements the web component\r\n * @returns void\r\n */\r\nexport function customElementsDefineSafe(tagName, handlerClass) {\r\n  if (!customElements.get(tagName))\r\n    customElements.define(tagName, handlerClass);\r\n  // else already registered\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Robustly escape a string for display in HTML.\r\n * @example\r\n *   cleanForHtml(\"<em>Love</em> & Hope\") =>\r\n *     \"&lt;em&gt;log(string)&lt;/em&gt; &amp; Hope\"\r\n * @param {string} str - the string that needs escaping\r\n * @returns {string} - the escaped string, kindly escaped by the browser\r\n * @see cleanTags\r\n */\r\nexport function cleanForHtml(str) {\r\n  return new Option(str).innerHTML;   // Cool trick to escape stuff for HTML\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Robustly remove <tags> from string. Does NOT escape the string.\r\n * @example\r\n *   cleanTags(\"<em>Love</em> & Hope\") =>\r\n *     \"Love & Hope\"   // Note the '&', you still need to escape\r\n * @param {string} str - the string that needs tags removed\r\n * @returns {string} - the cleaned string, kindly cleaned by the browser\r\n * @see cleanForHtml\r\n */\r\nexport function cleanTags(str) {\r\n  const div = document.createElement(\"div\");\r\n  div.innerHTML = str;\r\n  return div.textContent || div.innerText || \"\";\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Determines whether the present page is running in an <iframe>.\r\n * @returns {boolean} - true if in iframe, false if not.\r\n * @see {@link https://stackoverflow.com/a/326076}\r\n */\r\nexport function inIFrame() {\r\n  try {\r\n    if (typeof window !== \"undefined\")\r\n    return window.self !== window.top;\r\n    else return false;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Open an URL in a new tab. Often works.\r\n * @param url - the url to launch\r\n * @see https://stackoverflow.com/a/11384018\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction openInNewTab(url) {\r\n  if (typeof window === \"undefined\")\r\n    return;\r\n  window.open(url, '_blank').focus();\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/** Belongs in a graphics section * IMPROVE\r\n * Returns whether point (ptX, ptY) is within the rect [left, top, wid, ht].\r\n * @param {number} ptX - x coordinate to test\r\n * @param {number} ptY - y coordinate to test\r\n * @param {number[]} ltwh - rectangle specified as [ left, top, width, height ]\r\n * @returns {boolean} - whether the point is in the rect\r\n */\r\nexport function pointInRect(ptX, ptY, ltwh) {\r\n  return (\r\n    ptX >= ltwh[0] &&\r\n    ptX < ltwh[0] + ltwh[2] &&\r\n    ptY >= ltwh[1] &&\r\n    ptY < ltwh[1] + ltwh[3]\r\n  );\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Focus the given (presumed text-) element and select all its text.\r\n * @param textInputElement - the element to focus\r\n */\r\nexport function focusAndSelectAll(textInputElement) {\r\n  textInputElement.focus();\r\n  textInputElement.setSelectionRange(0, textInputElement.value.length);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Use the browser to parse HTML text and return the resultant document fragment\r\n * @param html - the HTML text to parse\r\n * @returns {DocumentFragment} - the doc fragment, suitable for insertion\r\n * @ref - https://gist.github.com/ryanmorr/58495cf47fc783bac8c8783c9e517e0b\r\n */\r\nexport function parseHTML(html) {\r\n  const template = document.createElement('template');\r\n  template.innerHTML = html;\r\n  return template.content;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Get the value of a CSS variable from JavaScript. Note that if you're a web\r\n * component, you can generally use \"this\" for the element argument.\r\n * @param {Element} element - element that can see dashDashVarName\r\n * @param {string} dashDashVarName - var name, e.g. '--bg-color'\r\n * @param {any} [dflt] - default to return in case var value can't be obtained\r\n * @returns {string|undefined} - variable value or undefined\r\n */\r\nexport function getCssVariable(element, dashDashVarName, dflt=undefined) {\r\n  const compStyle = getComputedStyle(element);\r\n  if (compStyle)\r\n    return compStyle.getPropertyValue(dashDashVarName);\r\n  else return dflt;\r\n}\r\n\r\n//==============================================================================\r\n// Colors\r\n//==============================================================================\r\n/**\r\n * Parse a color string into a structure like { a: [0, 255], r:, g:, b: }. This\r\n * is NOT a full CSS color-string parser, i.e. no support for \"rgba(...)\" etc.\r\n * @param {string} str - the color string to convert. This string may be in the\r\n * following formats:\r\n * @example\r\n * hashToColor(\"#d40000\") => { a: 255, r: 212, g: 0, b: 0 }\r\n * hashToColor(\"d40000\") => { a: 255, r: 212, g: 0, b: 0 }\r\n * hashToColor(\"#88ff2000\") => { a: 128, r: 255, g: 32, b: 0 }\r\n * hashToColor(\"88ff2000\") => { a: 128, r: 255, g: 32, b: 0 }\r\n * @returns {{a: number, r: number, b: number, g: number}} - color components in\r\n * the range [0, 255] for all values. If alpha was not present in the input\r\n * string, the output alpha will be 255.\r\n */\r\n//\r\nexport function hashToColorObj(str) {\r\n  if (isString(str) && str.length > 0) {\r\n    if (str[0] === \"#\") str = str.substring(1);\r\n    if (str.length === 6)\r\n      return {\r\n        a: 255,\r\n        r: parseInt(str.substring(0,2), 16),\r\n        g: parseInt(str.substring(2,4), 16),\r\n        b: parseInt(str.substring(4,6), 16),\r\n      };\r\n    else return {\r\n      a: parseInt(str.substring(0,2), 16),\r\n      r: parseInt(str.substring(2,4), 16),\r\n      g: parseInt(str.substring(4,6), 16),\r\n      b: parseInt(str.substring(6,8), 16),\r\n    }\r\n  }\r\n  return { a: 255, r: 0, g: 0, b: 0 }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Given a color object from [hashToColorObj]{@link hashToColorObj} above,\r\n * convert to a hash string.\r\n * @param {{a: number, r: number, b: number, g: number}} colorObj - the color\r\n * object to convert\r\n * @param {boolean} withAlpha - whether to include the alpha value in the hash\r\n * @returns {string} - the hash, either \"#rrggbb\" or \"#aarrggbb\"\r\n */\r\nexport function colorObjToHash(colorObj, withAlpha=false) {\r\n  if (withAlpha) {\r\n    return `#${(\"0\" + colorObj.a.toString(16)).substring(0,2)}${(\"0\" + colorObj.r.toString(16)).substring(0,2)}${(\"0\" + colorObj.g.toString(16)).substring(0,2)}${(\"0\" + colorObj.b.toString(16)).substring(0,2)}`\r\n  } else {\r\n    return `#${(\"0\" + colorObj.r.toString(16)).substring(0,2)}${(\"0\" + colorObj.g.toString(16)).substring(0,2)}${(\"0\" + colorObj.b.toString(16)).substring(0,2)}`\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Adapted from jQuery.Color\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Given a color object from [hashToColorObj]{@link hashToColorObj} above\r\n * return the same color object with additional {s:, h:, and l:} values.\r\n * Preserves r, g, b, and a.\r\n * @param {{a: number, r: number, b: number, g: number}} c - the color\r\n * object to convert\r\n * @returns {{a: number, r: number, b: number, g: number, h: number, s: number, l: number}} -\r\n * the same color, but with additional hue [0, 360), sat [0, 1], and l [0,1].\r\n */\r\nexport function rgbToHsl(c) {\r\n  let r = c.r / 255;\r\n  let g = c.g / 255;\r\n  let b = c.b / 255;\r\n  let a = c.a;\r\n  let max = Math.max(r, g, b);\r\n  let min = Math.min(r, g, b);\r\n  let diff = max - min;\r\n  let add = max + min;\r\n  let l = add * 0.5;\r\n  let h, s;\r\n\r\n  if (min === max) {\r\n    h = 0;\r\n  } else if (r === max) {\r\n    h = (60.0 * (g - b) / diff) + 360.0;\r\n  } else if (g === max) {\r\n    h = (60.0 * (b - r) / diff) + 120.0;\r\n  } else {\r\n    h = (60.0 * (r - g) / diff) + 240.0;\r\n  }\r\n\r\n  // chroma (diff) == 0 means grayscale which, by definition, saturation = 0%\r\n  // otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)\r\n  if (diff === 0) {\r\n    s = 0;\r\n  } else if (l <= 0.5) {\r\n    s = diff / add;\r\n  } else {\r\n    s = diff / (2.0 - add);\r\n  }\r\n  return { a: a, h: h % 360.0, s: s, l: l };\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Convert a color object (already containing h, s, and v members) to also have\r\n * r, g, and b, values in the range [0, 255]. Preserves h, s, v and a.\r\n * @param {{a: number, h: number, s: number, l: number}} colorObj - the color to\r\n * be converted\r\n * @returns {{a: number, r: number, b: number, g: number, h: number, s: number, l: number}} -\r\n * the same color, but with additional hue [0, 360), sat [0, 1], and l [0,1].\r\n */\r\nexport function hslToRgb(hc) {\r\n  let h = hc.h / 360.0,\r\n    s = hc.s,\r\n    l = hc.v,\r\n    a = hc.a,\r\n    q = l <= 0.5 ? l * (1.0 + s) : l + s - l * s,\r\n    p = 2.0 * l - q;\r\n\r\n  function hueToRgb(p, q, h) {\r\n    h = (h + 1.0) % 1.0;\r\n    if (h * 6.0 < 1) {\r\n      return p + (q - p) * h * 6.0;\r\n    }\r\n    if (h * 2 < 1.0) {\r\n      return q;\r\n    }\r\n    if (h * 3.0 < 2.0) {\r\n      return p + (q - p) * ((.02 / 3.0) - h) * 6.0;\r\n    }\r\n    return p;\r\n  }\r\n\r\n  return merge(hc, {\r\n    r: Math.round(hueToRgb(p, q, h + (1.0 / 3.0)) * 255),\r\n    g: Math.round(hueToRgb(p, q, h) * 255),\r\n    b: Math.round(hueToRgb(p, q, h - (1.0 / 3.0)) * 255),\r\n    a: a,\r\n  });\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Clamp a number to the [0, 255] range\r\n * @param {number} val - the value to clamp\r\n * @returns {number} - the clamped value\r\n */\r\nexport function byteClamp(val) {\r\n  if (val < 0) return 0;\r\n  if (val > 255) return 255;\r\n  return val;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// NOTE: max is INCLUSIVE.\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Clamp a value to the interval [minIncl, maxIncl], i.e. can return maxIncl\r\n * @param {number} val - the value to clamp * @param {number} minIncl\r\n * @param {number} minIncl - the minimum value of the range, inclusive\r\n * @param {number} maxIncl - the maximum value of the range, INCLUSIVE\r\n * @returns {number} - the clamped value\r\n */\r\nexport function clampIncl(val, minIncl, maxIncl) {\r\n  if (val < minIncl) return minIncl;\r\n  if (val >= maxIncl) return maxIncl;\r\n  return val;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Clamp a value to the interval [minIncl, maxExcl), i.e. never returns max\r\n * @param {number} val - the value to clamp * @param {number} minIncl\r\n * @param {number} minIncl - the minimum value of the range, inclusive\r\n * @param {number} maxExcl - the maximum value of the range, EXCLUSIVE\r\n * @returns {number} - the clamped value\r\n */\r\nexport function clamp(val, minIncl, maxExcl) {\r\n  return (val < minIncl) ? minIncl :\r\n    (val >= maxExcl) ? maxExcl - Number.EPSILON : val;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Clamp a value to the interval [0, 1), i.e. never returns 1\r\n * @param {number} val - the value to clamp\r\n * @returns {number} - the clamped value\r\n */\r\nexport function clampNormIncl(val) {\r\n  return clamp(val, 0, 1);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// colors argument and return value: [ \"#rrggbb\" [, \"##rrggbb] [, ...] ]\r\n// lambda argument: function(colorObj, index, colorArray), where\r\n//    colorObjs is a color object { a, r, g, b } for easier processing\r\n//    index is the index into colors\r\n//    colorArray is colors\r\n//    return: colorObj    <--- NOT a \"#rrggbb\" string. adjustColors will do that\r\n//\r\n// Example:\r\n//    adjustColors(colors, c => {\r\n//      a: c.a,\r\n//      r: byteclamp(c.r * 2),\r\n//      g: byteclamp(c.g * 2),\r\n//      b: byteclamp(c.b * 2)\r\n//    });\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Run a lambda over an array of colors, wherein the function may modify the\r\n * colors. Returns a new array. Handy for doing some common operation on colors,\r\n * like making them all darker or whatever.\r\n * @param {string[]} colors - array of hash-colors, like [ \"#rrggbb\", ... ]\r\n * @param lambda\r\n * @returns {*}\r\n */\r\nexport function adjustColors(colors, lambda) {\r\n  return colors.map((c, i, a) => {\r\n    let rgb = hashToColorObj(c);\r\n    rgb = lambda(rgb, i, a);\r\n    let str = colorObjToHash(rgb);\r\n    return str;\r\n  });\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Calculate the normalized luminance of the given color.\r\n * @param {string} color - hash color string as parsed by\r\n * {@link hashToColorObj} target color\r\n * @returns {number} - normalized luminance [0,1]\r\n * @example\r\n * // The usual reason to call this function is to decide whether to use black or\r\n * // white text/foreground against a given background color. So here you go. The\r\n * // threshold is empirical.\r\n * function contrastColor(colorHash) {\r\n *   return luminance(colorHash) < 0.4 ? \"#ffffff\" : \"#000000\";\r\n * }\r\n @example\r\n * // Relatedly, if you've got the lightness from HSL, you can use a different\r\n * // threshold for that. The threshold is empirical.\r\n * function contrastColorLightness(hslLightness) {\r\n *   return hslLightness < 0.55 ? \"#ffffff\" : \"#000000\";\r\n * }\r\n */\r\nexport function luminance(color) {\r\n  let c = hashToColorObj(color);\r\n  return 0.2126 * (c.r / 255.0) + 0.7152 * (c.g / 255.0) + 0.0722 * (c.b / 255.0);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Calculate contrast between two colors. (Technically doesn't matter which is\r\n * foreground and which is background, it's lighter / darker.)\r\n *\r\n * Interpretation:\r\n *  * 1.0 = NO CONTRAST (i.e. bkgd === fore)\r\n * @param {string} bkgd  - hash color background\r\n * @param {string} fore - hash color foreground\r\n * @returns {number} - contrast ratio between background and foreground\r\n */\r\nexport function contrastRatio(bkgd, fore) {\r\n  const bkgdLum = luminance(bkgd);\r\n  const foreLum = luminance(fore);\r\n  return (Math.min(bkgdLum, foreLum) + 0.05) / (Math.max(bkgdLum, foreLum) + 0.05);\r\n}\r\n\r\n//==============================================================================\r\n// Paths\r\n//==============================================================================\r\n/**\r\n * Return everything to the right of the first '/'.\r\n * @example\r\n * basename(\"output/InsetCharts.json\")  // makes \"InsetCharts.json\"\r\n * @example\r\n * basename(\"http://localhost:8888/image/favicon.ico\")  // makes \"favicon.ico\"\r\n * @param path\r\n * @returns {*|string}\r\n */\r\nexport function basename(path) {\r\n  const slashIndex = path.lastIndexOf('/');\r\n  return slashIndex === -1 ? path : path.substring(slashIndex + 1);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n/**\r\n * Return everything to the left of the first '.'.\r\n * @example\r\n * stripExtension(\"output/InsetCharts.json\")  // makes \"output/InsetCharts\"\r\n * @example\r\n * stripExtension(\"http://localhost:8888/api\") // makes \"http://localhost:8888/api\"\r\n * @example\r\n * stripExtension(baseName(\"output/InsetCharts.json\")) // makes \"InsetCharts\"\r\n * @param path\r\n * @returns {*|string}\r\n */\r\nexport function stripExtension(path) {\r\n  const dotIndex = path.lastIndexOf('.');\r\n  return dotIndex === -1 ? path : path.substring(0, dotIndex);\r\n}\r\n\r\n//==============================================================================\r\n// Network\r\n//==============================================================================\r\n/**\r\n * Compares the given host (usually taken from window.location.host[name])\r\n * against known aliases for localhost and returns true if it matches any.\r\n * @param host - the hostname to test. Presence of port, etc. won't break it\r\n * @returns {boolean} - true if host looks like localhost, false if not\r\n */\r\nexport function isLocalhost(host) {\r\n  for (let selfHostname of kLocalhostAliases)\r\n    if (host.toLowerCase().indexOf(selfHostname) !== -1)\r\n      return true;\r\n  return false;\r\n}\r\n\r\n//==============================================================================\r\n// Inset\r\n//==============================================================================\r\n/**\r\n * Inset chart Channel record\r\n * @typedef {Object} Channel\r\n * @property {string} Units - The channel's units\r\n * @property {[any]} Data - The channel's data (which could be more arrays)\r\n */\r\n\r\n//----------------------------------------------------------------------------\r\n/**\r\n * Signature for the lambda used in filterInsetChannels\r\n * @callback filterInsetChannelsLambda\r\n * @param {string} channelName - the present channel's name (key)\r\n * @param {Channel} channel - the present Channel's data structure\r\n * @returns {boolean} - true if the channel is to be kept, false to drop\r\n */\r\n\r\n//----------------------------------------------------------------------------\r\n/**\r\n * Run a lambda function over the channels of inset-chart-shaped data and only\r\n * keep the channels for which the lambda returns a truthy result. The signature\r\n * of the lambda is bool lambda(channelName:str, channel:Channel). The lambda\r\n * should return true for any channel to keep, or false for channels to drop.\r\n * @example\r\n * // This example drops all channels that start with \"Population\"\r\n * filterInsetChannels(myRawInsetData, (chName, ch) => {\r\n *   return !chName.startsWith(\"Population\");\r\n * });\r\n * @param rawInsetData - the inset data to modify in-place\r\n * @param {filterInsetChannelsLambda} lambda - a lambda function to run on each\r\n * channelName/channel combo\r\n */\r\nexport function filterInsetChannels(rawInsetData, lambda) {\r\n  rawInsetData.Channels =\r\n    Object.keys(rawInsetData.Channels).reduce((a, chName) => {\r\n      const ch = rawInsetData.Channels[chName];\r\n      if (lambda(chName, ch))\r\n        a[chName] = ch;\r\n      return a;\r\n    }, {});\r\n}\r\n\r\n//==============================================================================\r\n// Geospatial\r\n//==============================================================================\r\n","import {FileTree} from \"./FileTree\";\r\nimport {find, findIndex, get, isArray} from \"lodash-es\";\r\nimport {Entity} from \"./Entity\";\r\nimport {kSim} from \"./EntityCache\";\r\nimport {generateGuid, overlayObjects} from \"../utils/Utils\";\r\nimport {log, logError, logInfo, logObject, logWarn} from \"./Logging\";\r\n\r\n//==============================================================================\r\n// Simulation\r\n//\r\n// Simulation inherits from Entity:\r\n// Data member    Description\r\n// -------------- -----------------------------------------------------------\r\n//   mc           our reference to MicroCOMPS\r\n//   id           the entity ID\r\n//   entityType   the entity type (e.g. \"Simulations\", a COMPS entity type)\r\n//\r\n// Simulation maintains:\r\n// Data member    Description\r\n// -------------- -----------------------------------------------------------\r\n//   info         accumulated simulation info (or null)\r\n//   job          the succeeding job, if any (or null)\r\n//   tree         the FileTree with all files from succeeding job, or just\r\n//                input and asset files if no succeeding job.\r\n//   config       the simulation's config (or null)\r\n//   demographics the simulation's pre-overlaid demographics (or null)\r\n//==============================================================================\r\n/**\r\n * Simulation Entity class\r\n * @class\r\n * @property {object|null} info - the simulation info object return by COMPS\r\n * @property {object|null} job - the succeeding job, or null if none\r\n * @property {FileTree|null} tree - the FileTree object with the sim's file\r\n */\r\nclass Simulation extends Entity {\r\n  static get kDefaultConfigFilename() { return \"./config.json\" }\r\n  static get kDemographicsDir() { return \"./Assets\" }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Constructor\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Construct a Simulation object. The Simulation is not put into the entity\r\n   * cache until populate().\r\n   * @param mc - the MicroCOMPS instance\r\n   * @param id - the entity id\r\n   */\r\n  constructor(mc, id) {\r\n    super(mc, id, kSim);\r\n    this.info = null;             // The sim info or null\r\n    this.job = null;              // The finished Job or null\r\n    this.configFilename =         // The name of the config file\r\n      Simulation.kDefaultConfigFilename;  // (may or may not be config.json)\r\n    this.tree = null;             // The FileTree for this sim\r\n    this.config = null;           // Contents of config.json (or the like)\r\n    this.demographics = null;     // Consolidated demographics\r\n  }\r\n\r\n  /**\r\n   * Simulation REST Config object\r\n   * @typedef {Object} SimConfig\r\n   * @property {string} EnvironmentName - the name of the sim's environment\r\n   * @property {int} MaximumNumberOfRetries - the max retries on failure\r\n   * @property {string} Priority - the queue priority for the sim\r\n   * @property {string} ExecutablePath - the job's id as a GUID-string\r\n   * @property {string} SimulationInputArgs - the job's id as a GUID-string\r\n   * @property {int} MinCores - the job's id as a GUID-string\r\n   * @property {int} MaxCores - the job's id as a GUID-string\r\n   * @property {boolean} Exclusive - the job's id as a GUID-string\r\n   */\r\n\r\n  /**\r\n   * Simulation REST HPCJob object\r\n   * @typedef {Object} HPCJob\r\n   * @property {string} Id - the job's id as a GUID-string\r\n   * @property {int} JobId - the job's cluster HPC job identifier (an int)\r\n   * @property {string} WorkingDirectory - the job's SAN working directory\r\n   * @property {string} SubmitTime - the job's submission time\r\n   * @property {string} StartTime - the time the job started on the cluster\r\n   * @property {string} EndTime - the time the job ended on the cluster\r\n   * @property {string} Priority - the job's priority, e.g. \"Lowest\"\r\n   * @property {string} JobState - the job's final state, e.g. \"Finished\"\r\n   * @property {string} TaskState - the job's task state, varies by environment\r\n   * @property {int} OutputDirectorySize - the size in bytes of the output dir\r\n   * @property {SimConfig} Configuration - the sim config used to run this job\r\n   */\r\n\r\n  /**\r\n   * Simulation REST Sim Info object\r\n   * @typedef {Object} SimInfo\r\n   * @property {string} Id - the sim's id as a GUID-string\r\n   * @property {string} Name - the sim name\r\n   * @property {string} Owner - the sim's owner username\r\n   * @property {string} DateCreated - the sim creation datetime (ISO-8601)\r\n   * @property {string} LastModified - the sim modified datetime (ISO-8601)\r\n   * @property {string} SimulationState - the sim's state, e.g. \"Finished\"\r\n   * @property {FileRec[]} Files - the sim's input files\r\n   * @property {HPCJob[]} HPCJobs - the sim's owner username\r\n   */\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Populates the sim object with sim info, succeeded job, and a file tree.\r\n   * Returns the comps simulation object, with info, job, and tree filled in.\r\n   * Success automatically adds us to the EntityCache.\r\n   * @returns {Simulation|null} - COMPS sim object, or null\r\n   */\r\n  populate() {\r\n    let self = this;\r\n    // Do a two COMPS API calls, then a ton of work to integrate them into a\r\n    // homogenous file tree and other info. This populates:\r\n    //\r\n    // this.info, this.job, this.tree\r\n\r\n    // Cache the sim now, even if we can't actually load it up. It will have\r\n    // nulls for the three fields we're filling out.\r\n    const mc = this.mc;\r\n    const ec = mc.getEntityCache();\r\n      ec.add(this);\r\n\r\n    let url = `${mc.opts.baseUrl}/api/Simulations/${this.id}?` +\r\n      `format=json&children=files,hpcjobs`;\r\n    if (mc.opts.verbose)\r\n      logInfo(`Simulation.populate fetching Sim/${this.id}...`);\r\n    return mc.request(url)\r\n      .then(rawInfo => {\r\n        if (typeof rawInfo === \"string\") {\r\n          self.info = null;\r\n          self.job = null;\r\n          self.tree = null;\r\n          const msg = \"Simulation.populate: COMPS rejected a REST call. Cookie may need refresh.\";\r\n          logError(msg);\r\n          return Promise.reject({ message: msg });\r\n        } else {\r\n          self.info = rawInfo.Simulations[0];\r\n          const jobs = self.info.HPCJobs;\r\n          self.job = find(jobs, {JobState: \"Finished\"}); // Lodash find\r\n          if (!self.job) {\r\n            self.job = null;\r\n            logWarn(\"Simulation.populate: Simulation has no job in Finished state.\");\r\n          } else {\r\n            self.configFilename = self._getConfigFilenameFromJob(self.job);\r\n          }\r\n          return Promise.resolve(self);\r\n        }\r\n      })\r\n      .then(sim => {\r\n        return sim._prepareSimFileTree();\r\n      })\r\n      .then(fileTree => {\r\n        self.tree = new FileTree(self.mc, fileTree);\r\n        return Promise.resolve(self);\r\n      })\r\n      .catch(err => {\r\n        logError(err.message);\r\n        return Promise.reject(err);\r\n      });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Retrieve the config data from the config file, or rejects if not found.\r\n   * @returns {Promise<config>} - the config data from config.json or the like\r\n   */\r\n  getConfig() {\r\n    if (this.config)\r\n      return Promise.resolve(this.config);\r\n    if (!this.tree)\r\n      return Promise.reject(\r\n        { message: \"Simulation.getConfig called on sim with no file tree\"});\r\n    if (!this.tree.contains(this.configFilename))\r\n      return Promise.reject(\r\n        { message: `Simulation.getConfig: cannot find ${this.configFilename}`});\r\n\r\n    const self = this;\r\n    return this.tree.getFile(this.configFilename)\r\n      .then(data => {\r\n        self.config = data;\r\n        return Promise.resolve(data);\r\n      })\r\n      .catch(ex => {\r\n        logError(\"Simulation.getConfig: exception, rejecting\");\r\n        logObject(ex);\r\n        return Promise.reject(\r\n          { message: `getConfig: Couldn't retrieve config file ${self.configFilename}` });\r\n      });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Retrieve and coalesce the demographics file and all its overlays. Note that\r\n   * this requires reading all the overlays into memory, and there can be a lot\r\n   * of overlays in some sims. The stored value is the consolidated demo.\r\n   * @returns {Promise<demographics>} - consolidated (overlaid) demographics data\r\n   */\r\n  getDemographics() {\r\n    if (this.demographics)\r\n      return Promise.resolve(this.demographics);\r\n\r\n    // Start by getting the config, where the demo filenames are listed\r\n    let self = this;\r\n    return this.getConfig()\r\n      .then(config => {\r\n        // We've got the config, so let's get the list of demographics filenames\r\n        // and make sure they're resolvable.\r\n        const ft = self.getFileTree();\r\n        let filenames = config.parameters.Demographics_Filenames;\r\n        if (!isArray(filenames))\r\n          filenames = [filenames];\r\n\r\n        // First peel off the main demo file and look for that\r\n        let mainDemoFn = filenames.shift();\r\n        // Look for the bare filename of the demographics file first\r\n        if (!ft.contains(mainDemoFn)) {\r\n          // If we can't find that, look for the bare demo file in Assets/\r\n          mainDemoFn = `${Simulation.kDemographicsDir}/${mainDemoFn}`;\r\n          if (!ft.contains(mainDemoFn)) {\r\n            return Promise.reject(\r\n              { message: `ERROR: Simulation.getDemographics: Main demographics file not found in / or ${Simulation.kDemographicsDir}`}\r\n            );\r\n          } // else found file in Assets/, use that\r\n        } // else just leave mainDemoFn alone\r\n\r\n        // Now check subsequent (overlay) files. They might have partial paths.\r\n        filenames.forEach((fn, i, lst) => {\r\n          if (!ft.contains(fn)) {\r\n            if (!ft.contains(`${Simulation.kDemographicsDir}/${fn}`)) {\r\n              return Promise.reject(\r\n                { message: `ERROR: Simulation.getDemographics: failed to resolve ${fn} in simulation file tree.` }\r\n              );\r\n            } else {\r\n              // Found it in Assets/, so update the path\r\n              lst[i] = `${Simulation.kDemographicsDir}/${fn}`;\r\n            }\r\n          } else {\r\n            // Found it in its specified dir, so just leave alone\r\n          }\r\n        });\r\n\r\n        // Finally put the main demo back at the top\r\n        filenames = [ mainDemoFn, ...filenames ];   // Put the main demo back in\r\n\r\n        // Go fetch all the files in parallel\r\n        return ft.getFiles(filenames);\r\n      })\r\n      .then(fileContentsArray => {\r\n        if (fileContentsArray.length === 1) {\r\n          // Only one file, no overlays\r\n          self.demographics = fileContentsArray[0];\r\n          return Promise.resolve(self.demographics);\r\n        } else if (fileContentsArray.length > 1) {\r\n          // Multiple files specified, overlay each\r\n          self.demographics = fileContentsArray.shift();  // Grab the first file\r\n          self.demographics = overlayObjects(self.demographics,  // Overlay rest\r\n            fileContentsArray);\r\n          return Promise.resolve(self.demographics);\r\n        } else {\r\n          // No demographics\r\n          return Promise.reject(\r\n            { message: \"ERROR: Simulation.getDemographics: No demographics files found.\"});\r\n        }\r\n      });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get the sim information object from the Simulation.\r\n   * @returns {SimInfo|null} - the sim info if populated, else null\r\n   */\r\n  getInfo() {\r\n    return this.info;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get the succeeding job from this sim, or null if not found.\r\n   * @returns {HPCJob|null} - The succeeding job for this sim or null\r\n   */\r\n  getJob() {\r\n    return this.job;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Obtain the complete, normalized file tree for this simulation including\r\n   * input, asset, and output files (for the first succeeded job). If no job\r\n   * succeeded, the file tree will only contain input and asset files.\r\n   * @return {FileTree|null}- the sim file tree or null\r\n   */\r\n  getFileTree() {\r\n    return this.tree;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Looks for Vis-Tools preprocess dir, and returns the URL to display this sim\r\n   * in the Vis-Tools client. To directly navigate to this URL, do\r\n   * window.location.replace(visToolsUrl). Note that only simulations that have\r\n   * already been pre-processed for Vis-Tools will have this directory.\r\n   * A liberal RE is used to find the visset.json file, but the first one is\r\n   * used.\r\n   * @returns {string|undefined} - the URL to hit to open this sim in\r\n   * the Vis-Tools client. null if there's no Vis-Tools directory, or\r\n   * if the Vis-Tools directory is found but a visset.json is not.\r\n   */\r\n  getVisToolsUrl() {\r\n    if (!this.tree) return;\r\n    const vtFR = this.tree.findFileRecord(\"/Vis-Tools/\");\r\n    if (!vtFR) {\r\n      log(\"Simulation.getVisToolsUrl: no VT dir found\");\r\n      return null;\r\n    }\r\n    let vissetUrl = null;\r\n    this.tree.traverse(rec => {\r\n      if (rec.FriendlyName.match(/.*visset.*\\.json/ig)) {\r\n        vissetUrl = rec.Url;\r\n        return false;   // Stop traversal\r\n      }\r\n    });\r\n    return vissetUrl ?\r\n      `${this.baseUrl}/vistools/geospatial.html?set=` +\r\n      `${encodeURIComponent(vissetUrl)}` :\r\n      undefined;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns the Directory FileRec for the \"Vis-Tools\" dir or null. You would\r\n   * use this if you wanted the URLs of the files in the Vis-Tools directory,\r\n   * such as the \"visset.json\" file.\r\n   * @returns {FileRec|null}\r\n   */\r\n  getVisToolsDir() {\r\n    if (!this.tree) return;\r\n    return this.tree.findFileRecord(\"/Vis-Tools/\");\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return a human-readable string for this object\r\n   * @returns {string}\r\n   */\r\n  toString() {\r\n    return `[Simulation: ${this.id} with [${this.info ? \"√\" : \" \"}] info, ` +\r\n      `[${this.job ? \"√\" : \" \"}] job, [${this.tree ? \"√\" : \" \"}] tree]`;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return a string with detailed information about this Simulation object.\r\n   * Handy for debugging.\r\n   * @returns {string}\r\n   */\r\n  dump() {\r\n    return Simulation.dumpSim(this);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Helper function for stringifying Simulation objects\r\n   * @param sim - a Simulation object for which you want a descriptive string\r\n   * @returns {string} - a human-readable set of details\r\n   */\r\n  static dumpSim(sim) {\r\n    return `${sim.toString()}\\n` +\r\n      `  ${Simulation.dumpInfo(sim.info)}\\n` +\r\n      `  ${Simulation.dumpJob(sim.job)}\\n` +\r\n      `  ${Simulation.dumpTree(sim.tree)}\\n`;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Helper function for stringifying SimInfo objects\r\n   * @param {SimInfo} simInfo - a SimInfo object for which you want a descriptive string\r\n   * @returns {string} - a human-readable set of details\r\n   */\r\n  static dumpInfo(simInfo) { return simInfo ?\r\n    `[SimInfo ${simInfo.Id} ${simInfo.Owner}/'${simInfo.Name}']` :\r\n    \"[not present]\"; }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Helper function for stringifying HPCJob objects\r\n   * @param {HPCJob} job - the target HPCJob object\r\n   * @returns {string} - a human-readable set of details\r\n   */\r\n  static dumpJob(job) { return job ?\r\n    `[Job ${job.Id}/${job.JobId} in ${job.JobState} state]` :\r\n    \"[no finished job]\"; }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Helper function for stringifying HPCJob objects\r\n   * @param {FileTree} tree - the target FileTree object\r\n   * @returns {string} - a human-readable set of details\r\n   */\r\n  static dumpTree(tree) { return tree ?\r\n    tree.toString() : \"[not present]\"; }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * A helper method for visualizations. Calculates the lat-long bounds and the\r\n   * min/max initial population from a collection of Nodes, as found in\r\n   * demographics. Eventually will end up in a Demographics class.\r\n   * @param nodes\r\n   * @returns {{maxPopulation, minPopulation,\r\n   *   bounds: {maxLat, minLat, minLng, maxLng}}} - node stats\r\n   */\r\n  static calcNodeStats(nodes) {\r\n    let minLat, minLng, maxLat, maxLng, minPop, maxPop;\r\n    nodes.forEach((node, i) => {\r\n      let na = node.NodeAttributes;\r\n      if (!i) {\r\n        minLat = na.Latitude; maxLat = na.Latitude;\r\n        minLng = na.Longitude; maxLng = na.Longitude;\r\n        minPop = na.InitialPopulation;\r\n        maxPop = na.InitialPopulation;\r\n      }\r\n      else {\r\n        minLat = na.Latitude < minLat ? na.Latitude : minLat;\r\n        maxLat = na.Latitude > maxLat ? na.Latitude : maxLat;\r\n        minLng = na.Longitude < minLng ? na.Longitude : minLng;\r\n        maxLng = na.Longitude > maxLng ? na.Longitude : maxLng;\r\n        minPop = na.InitialPopulation < minPop ? na.InitialPopulation : minPop\r\n        maxPop = na.InitialPopulation > maxPop ? na.InitialPopulation : maxPop;\r\n      }\r\n    })\r\n    return {\r\n      bounds:\r\n        // [ [ minLng, minLat ],\r\n        //   [ maxLng, maxLat ] ],\r\n        [ [ minLat, minLng ],\r\n          [ maxLat, maxLng ] ],\r\n      minPopulation: minPop,\r\n      maxPopulation: maxPop,\r\n    };\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Implementation\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Coordinates the parallel I/O and post-processing necessary to build the\r\n   * normalized simulation file tree. Called internally.\r\n   * @returns {Promise<[FileRec]>} - the file tree\r\n   * @private\r\n   */\r\n  _prepareSimFileTree() {\r\n    let self = this;\r\n    if (!this.info) return Promise.reject(\r\n      { message: \"Simulation._prepareSimulationFileTree(): No sim info\"});\r\n\r\n    let outputsArray;\r\n    return self._getRawOutputListings()   // This works even if job is null\r\n      .then(rawOutputArrays => {  // There are always two\r\n        outputsArray = [\r\n          get(rawOutputArrays, \"[0].Resources\", []),  // First raw output array's Resources\r\n          get(rawOutputArrays, \"[1].AssetCollections[0].Assets\", [])   // Second raw output array's Resources\r\n        ];\r\n        return Promise.resolve(outputsArray);\r\n      })\r\n      .then(outputs => {\r\n        return self._prepareOutput(self.info, outputs);\r\n      });\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Raw I/O for getting raw output listing and asset collection listing. This\r\n   * function is tolerant of sims that don't have a job in Finished state. In\r\n   * such case only input and asset files are in the tree, because there are no\r\n   * output files.\r\n   * @private\r\n   * @returns {Promise<any[]>} - array of file contents\r\n   * [simOutputListing, assetOutputListing], where the latter entry will only\r\n   * be present if there's an Asset Collection (which there usually is).\r\n   */\r\n  _getRawOutputListings() {    // Returns a promise\r\n    let self = this;\r\n    if (this.job === null) {\r\n      // Make a result with the input files but no output files\r\n      return Promise.resolve([\r\n        { Resources: this.info.Files },\r\n        { AssetCollections: [{ Assets: [] }] },\r\n      ]);\r\n    }\r\n    // This is the Promise version of async.parallel(). Unlike async.parallel,\r\n    // you put promises in the array, not functions.\r\n    let ioPromises = [];\r\n    ioPromises.push(self._getSimOutputFiles(this.id, this.job));\r\n    if (\"AssetCollectionId\" in this.job.Configuration)\r\n      ioPromises.push(self._getOutputAssetListing(\r\n        this.job.Configuration.AssetCollectionId));\r\n    return Promise.all(ioPromises);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get the output file listing, not following symlinks, tree output.\r\n   * NOTE: The records returned from this function are not the same as the\r\n   * ones returned by _getOutputAssetListing.\r\n   * @param {string} simId - the sim's id (a GUID)\r\n   * @param {Job} job - the succeeding job (a COMPS Job record)\r\n   * @returns {Promise<any>} - Promise for sim output files\r\n   */\r\n  _getSimOutputFiles(simId, job) {\r\n    // Ask the COMPS asset manager for the sim's output.\r\n    return this.mc.request(\r\n      `${this.mc.opts.baseUrl}/asset/Simulations/${simId}/output/?hpcjobid=${job.Id}&format=json&followSymLinks=0&flatten=0&zip=0`,\r\n    )\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get an asset collection file listing.\r\n   * NOTE: The records returned from this function are not the same as the\r\n   * ones returned by _getSimOutputFiles.\r\n   * @param {string} acId - the asset collection's id (a GUID)\r\n   * @returns {Promise<any>} - Promise for COMPS AssetCollection listing\r\n   */\r\n  _getOutputAssetListing(acId) {    // Returns a promise\r\n    // Ask the COMPS asset manager for the sim's asset listing.\r\n    return this.mc.request(\r\n      `${this.mc.opts.baseUrl}/api/AssetCollections/${acId}/?children=assets&format=json`,\r\n    )\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Given simInfo and the array of listings, combine and normalize.\r\n   * @private\r\n   * @param {object} simInfo - the getSimInfo() result\r\n   * @param {any[]} outputsArrays - the _getRawOutputListing() result\r\n   * @returns {Promise<fileRec[]>} - combined and normalized file tree\r\n   */\r\n  _prepareOutput(simInfo, outputsArrays) {    // Returns a promise\r\n    let result = outputsArrays[0];\r\n    let acTree = this._convertAssetFileList([], outputsArrays[1]);\r\n    let acIndex = findIndex(result, {\r\n      Type: \"SymLinkDirectory\",\r\n      FriendlyName: \"Assets\"\r\n    });\r\n    if (acIndex !== -1) {\r\n      result[acIndex] = acTree[0];\r\n      result[acIndex].PathFromRoot = result[acIndex].RelativePath;\r\n      delete result[acIndex].RelativePath;\r\n    }\r\n    return Promise.resolve(result);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  _convertAssetFileList(entityFiles, acList) {\r\n    /**\r\n     * This is how you make the sausage right here, and really, the reason I wrote\r\n     * this library in the first place. The present function (which creates a\r\n     * normalized, tree-structured, complete output file listing from COMPS) is a\r\n     * huge PITA that resulted from differences between how input files are\r\n     * handled and how the Asset Manager handles them. So this bit of\r\n     * super-painful code is adapted from COMPS explore.js code that Peter, David\r\n     * and I have already sweated over. With any luck, no one will ever need to\r\n     * write this again. Most of the credit for this code goes to David. :-)\r\n     * @private\r\n     * @param {object[]} entityFiles - the raw input file listing\r\n     * @param {object[]} [acList] - the raw fAsset Collection listing\r\n     * @returns {fileRec[]} - the combined and normalized inputs\r\n     */\r\n    let mainDir = [];\r\n    let assetCollectionDir = {\r\n      Id: \"AssetCollFolderId\",\r\n      Type: \"Directory\",\r\n      FriendlyName: \"Assets\",\r\n      Items: [],\r\n      Length: 0,\r\n      RelativePath: \".\"\r\n    };\r\n\r\n    //..........................................................................\r\n    /**\r\n     * Recursively create directory fileRecs.\r\n     * @private\r\n     * @param {fileRec[]} dirs - directories\r\n     * @param {string} rootDir - name to use for root directory\r\n     * @returns {fileRec[]} - tree with directories in place\r\n     */\r\n    let createDirs = function (dirs, rootDir) {\r\n      if (!dirs || dirs.length === 0) {\r\n        return rootDir;\r\n      }\r\n\r\n      if (dirs.length > 0) {\r\n        if (findIndex(rootDir.Items, {FriendlyName: dirs[0]}) === -1) {\r\n          rootDir.Items.push({\r\n            Id: generateGuid(),\r\n            Type: \"Directory\",\r\n            FriendlyName: dirs[0],\r\n            Items: [],\r\n            Length: 0,\r\n            RelativePath: rootDir.FriendlyName,\r\n          });\r\n        }\r\n        return createDirs(dirs.slice(1),\r\n          find(rootDir.Items, {FriendlyName: dirs[0]}));\r\n      }\r\n    };\r\n\r\n    //..........................................................................\r\n    /**\r\n     * Converts an asset-type listing entry into the normalized kind we output.\r\n     * @private\r\n     * @param {object} asset - a single raw asset file listing\r\n     * @returns {fileRec} - normalized fileRec for that asset\r\n     */\r\n    let convertAssetToModel = function(asset) {\r\n      return {\r\n        Id: asset.MD5Checksum, // + \":\" + asset.RelativePath,\r\n        Type: \"File\",\r\n        MD5: asset.MD5Checksum,\r\n        FriendlyName: asset.FileName,\r\n        Length: asset.Length,\r\n        Url: asset.Uri,\r\n        RelativePath: \"Assets\\\\\" + (asset.RelativePath ? asset.RelativePath : \"\")\r\n      }\r\n    };\r\n\r\n    //..........................................................................\r\n    /**\r\n     * Given a relative path and root directory name, and an asset, create a\r\n     * normalized fileRec.\r\n     * @private\r\n     * @param {string} relativePath - normalized path for this asset\r\n     * @param {fileRec} rootDir - root directory normalized fileRec\r\n     * @param {object} asset - the single asset in question\r\n     */\r\n    let createDirsAndFile = function (relativePath, rootDir, asset) {\r\n      if (!relativePath || relativePath === \"\") {\r\n        rootDir.Items.push(convertAssetToModel(asset));\r\n      } else {\r\n        let dirs = relativePath.split(\"\\\\\");\r\n        if (relativePath !== \"\" && dirs.length > 0) {\r\n          // directory has not been created yet\r\n          let targetDir = createDirs(dirs, rootDir);\r\n          targetDir.Items.push(convertAssetToModel(asset));\r\n        }\r\n      }\r\n    };\r\n\r\n    //..........................................................................\r\n    /**\r\n     * Calculate folder size.\r\n     * @param {fileRec} folder - the dir rec for which to calculate size\r\n     * @returns {number} - total size in bytes of all files in this immediate\r\n     * directory, but not recursively.\r\n     */\r\n    let calculateFolderSize = function (folder) {\r\n      let totalSize = 0;\r\n      folder.Items.forEach(function (item) {\r\n        if (item.Type === \"File\") {\r\n          totalSize += item.Length;\r\n        } else if (item.Type === \"Directory\") {\r\n          totalSize += calculateFolderSize(item);\r\n        }\r\n      });\r\n      folder.Length = totalSize;\r\n      return totalSize;\r\n    };\r\n\r\n    if (acList) {\r\n      acList.forEach(function (asset) {\r\n        createDirsAndFile(asset.RelativePath, assetCollectionDir, asset);\r\n      });\r\n      mainDir.push(assetCollectionDir);\r\n      assetCollectionDir.Length = calculateFolderSize(assetCollectionDir);\r\n    }\r\n\r\n    if (entityFiles) {\r\n      entityFiles.forEach(function (entityFile) {\r\n        mainDir.push({\r\n          Id: entityFile.MD5Checksum,\r\n          MD5: entityFile.MD5Checksum,\r\n          Type: \"File\",\r\n          FriendlyName: entityFile.FileName,\r\n          Length: entityFile.Length,\r\n          Url: entityFile.Uri,\r\n          RelativePath: \"\"\r\n        });\r\n      });\r\n    }\r\n    return mainDir;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Implementation\r\n  //----------------------------------------------------------------------------\r\n  _getConfigFilenameFromJob(job) {\r\n    if (!this.job)\r\n      return Simulation.kDefaultConfigFilename;\r\n\r\n    let parts = this.job.Configuration.SimulationInputArgs.split(\" \");\r\n    while (parts.length > 0 && parts.shift() !== \"--config\") {\r\n      // nothing\r\n    }\r\n    return parts.length > 0 ? parts[0] : Simulation.kDefaultConfigFilename;\r\n  }\r\n} // Class Simulation\r\n\r\nexport {Simulation};\r\n","import axios from \"axios\";\r\nimport {Simulation} from \"./Simulation\";\r\nimport {EntityCache, kSim} from \"./EntityCache\";\r\nimport {clone, assign, isString, get} from \"lodash-es\";\r\nimport {getGlobalLogger, setGlobalLogger} from \"./Logging\";\r\nimport {cleanBaseUrl, getCookie, humanizeToken, isLocalhost} from \"../utils/Utils\";\r\nimport {VERSION, kDefaultBaseHostname, kDefaultDevBaseHostname} from \"./Constants\";\r\n\r\n/**\r\n * @module MicroCOMPS\r\n * MicroCOMPS module.\r\n */\r\n//==============================================================================\r\n// MicroCOMPS\r\n//==============================================================================\r\n/**\r\n * @class\r\n * MicroCOMPS main class\r\n */\r\nclass MicroCOMPS {\r\n  //----------------------------------------------------------------------------\r\n  // Constants & defaults\r\n  //----------------------------------------------------------------------------\r\n  static kEncode = true;\r\n  static kNoEncode = false;\r\n  static kDecode = true;\r\n  static kNoDecode = false;\r\n  static kTurnkeyUI = true;\r\n  static kNoTurnkeyUI = false;\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Constructor options object\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * options is the options object type for the MicroCOMPS constructor\r\n   * @typedef {Object} options\r\n   * @property {string} baseUrl - base COMPS url (e.g \"https://comps.idmod.org\")\r\n   * @property {string} token - a valid COMPS session token\r\n   * @property {object} logger - an override logger object (see Logging.js)\r\n   * @property {boolean} verbose - emit extra logging info if true\r\n   */\r\n  static kDefaultOptions = {\r\n    baseUrl: null,\r\n    token: null,\r\n    verbose: false,    // true during development\r\n  };\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Constructor\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * MicroCOMPS constructor.\r\n   * @example\r\n   * // Typical usage with no arguments, for use in a COMPS web browser iframe\r\n   * // context. The baseUrl and token are extracted from the COMPS cookie.\r\n   * let mc = MicroCOMPS();\r\n   * @example\r\n   * // Usage with options. Use this in a windowless environment like NodeJS or\r\n   * // any time you have an externally-available COMPS token.\r\n   * let mc = MicroCOMPS({\r\n   *   baseUrl: \"https://comps-dev.idmod.org\",\r\n   *   token: myCompsToken,\r\n   * });\r\n   * @class\r\n   * @property {boolean} authStarted - recursion brake for auth\r\n   * @property {options} opts - the currently-applied options object\r\n   * @property {EntityCache} entityCache - a cache of COMPS entities\r\n   * @property {function} signinHandler - ref to our signin handler\r\n   * @property {function} signoutHandler - ref to our signin handler\r\n   * @property {function} accessHandler - ref to our signin handler\r\n   * @param {options} options - an object containing MicroCOMPS initial options\r\n   */\r\n  constructor(options) {\r\n    // Initialize own properties\r\n    this.opts = clone(MicroCOMPS.kDefaultOptions);\r\n    this.entityCache = new EntityCache();\r\n    let self = this;\r\n\r\n    // Layer user options over our defaults\r\n    if (options)\r\n      this.opts = assign(this.opts, options);\r\n\r\n    // If a logger was given, plug it in now before we do anything that's likely\r\n    // to fail. We want to make sure any init-time problems are logged.\r\n    if (\"logger\" in this.opts) {\r\n      setGlobalLogger(this.opts.logger);\r\n    } else if (getGlobalLogger() === null) {\r\n      setGlobalLogger(console);\r\n    }  // else leave whatever global logger is installed in place\r\n\r\n    // Look for a baseUrl and token.\r\n    if (this.opts.baseUrl && !this.opts.baseUrl.startsWith(\"http\")) {\r\n      if (typeof window !== \"undefined\") {\r\n        this.opts.baseUrl = window.location.protocol + this.opts.baseUrl;\r\n      } else this.opts.baseUrl = \"https://\" + this.opts.baseUrl;\r\n    }\r\n    if (!this.opts.baseUrl)\r\n      this.opts.baseUrl = MicroCOMPS.findBaseUrl();\r\n    this.opts.baseUrl = cleanBaseUrl(this.opts.baseUrl);\r\n    if (!this.opts.token)\r\n      this.opts.token = MicroCOMPS.findToken(this.opts.baseUrl);\r\n\r\n    if (typeof window !== \"undefined\") {\r\n      window.addEventListener(\"message\", evt => { self._onCOMPSMessage(evt); });\r\n    }\r\n\r\n    // Store function refs for our auth callbacks. Storing these refs allows us\r\n    // to disconnect them later. Also doing it this way allows us to use\r\n    // instance functions instead of statics or loose functions.\r\n    //this._authSetup();\r\n\r\n    if (this.opts.verbose)\r\n      log(`MicroCOMPS.ctor: out, with token: ${\r\n        this.opts.token ? humanizeToken(this.opts.token) : \"NULL\"}`);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Simulations\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns a promise for a Simulation object on the sim with the given id and\r\n   * attempts a series of REST calls on it to populate it with job and file tree\r\n   * data.\r\n   * @async\r\n   * @param id - id of Simulation entity to look up\r\n   * @return {Promise<Simulation>|null} - Promise for a populated Simulation\r\n   */\r\n  getSimulation(id) {\r\n    if (this.entityCache.has(id)) {\r\n      if (this.opts.verbose)\r\n        log(`MicroCOMPS.getSimulation returning cached sim ${id}`);\r\n      return Promise.resolve(this.entityCache.get(id));\r\n    }\r\n    let sim = new Simulation(this, id);\r\n    return sim.populate();    // Populate will add the sim to the cache\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // I/O\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Sends a GET on the given url, and allows specification of the responseType\r\n   * and automatically includes the X-COMPS-Token header. Suitable for obtaining\r\n   * both text and binary sim outputs. The default responseType is \"json\".\r\n   * @async\r\n   * @param {string} url - the URL to fetch\r\n   * @param {string} responseType - the response type, e.g. \"text\" or \"arraybuffer\"\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\r\n   * @see https://axios-http.com/docs/req_config\r\n   * @returns {Promise<*>} - the URL's response data\r\n   */\r\n  request(url, responseType=\"json\") {\r\n    // This is a chimney, but it already saved me once. Leaving this here makes\r\n    // it easier to swap out the underlying I/O tech.\r\n    let opts = {\r\n      url: url,\r\n      headers: { \"X-COMPS-Token\": this.opts.token }\r\n    };\r\n    if (isString(responseType))\r\n      opts.responseType = responseType;\r\n    return axios(opts)\r\n      .then(resp => Promise.resolve(resp.data))\r\n      .catch(reason => Promise.reject(reason));\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Accessors\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get the current COMPS host url, e.g. \"https://comps.idmod.org\"\r\n   * @returns {string|*} - the current COMPS endpoint url\r\n   */\r\n  getBaseUrl() {\r\n    return this.opts.baseUrl;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get the current COMPS token. Normally you'll never need this, but if you\r\n   * want to do a direct COMPS REST call yourself you'll need the token for\r\n   * your request headers. See get().\r\n   * @returns {string} current COMPS token\r\n   */\r\n  getToken() {\r\n    return this.opts.token;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Get MicroCOMPS entity cache. This is used internally, but the cache is\r\n   * available and contains the accumulated results of all this session's\r\n   * COMPS REST calls.\r\n   * @returns {EntityCache}\r\n   */\r\n  getEntityCache() {\r\n    return this.entityCache;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return the current options object. This contains the current baseUrl,\r\n   * token, and logger, among other useful bits.\r\n   * @returns {Options} - options object\r\n   */\r\n  getOptions() {\r\n    return this.opts;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Change MicroCOMPS options after the fact.\r\n   * @param {options} options - an {options} object containing new settings\r\n   */\r\n  setOptions(options) {\r\n    assign(this.opts, options);\r\n    // If caller changed logger after construction, plug it into the global so\r\n    // all the static log functions will use it.\r\n    if ((\"logger\" in options) && options.logger) {\r\n      setGlobalLogger(options.logger);\r\n    }\r\n    if ((\"baseUrl\" in options))\r\n      this.opts.baseUrl = cleanBaseUrl(this.opts.baseUrl);\r\n    if (this.opts.verbose)\r\n      logInfo(`MicroCOMPS.setOptions: updated keys [${Object.keys(options)}]`);\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Obtain the version number for MicroCOMPS\r\n   * @returns {String} - the library version\r\n   */\r\n  static getVersion() {\r\n    return VERSION;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Returns whether the MicroCOMPS object is in a state where it can make REST\r\n   * calls to COMPS. That means it needs a valid endpoint and token. This\r\n   * function does not\r\n   * @returns {boolean} whether we have an endpoint + token or not.\r\n   */\r\n  isViable() {\r\n    let test1 = this.opts.baseUrl.startsWith(\"http\");\r\n    let test2 = this.opts.token !== null;\r\n    let result = test1 && test2;\r\n    if (this.opts.verbose) {\r\n      logInfo(`MicroCOMPS.isViable returning ${result} b/c ` +\r\n        `${test1 ? \"\" : \"bad baseUrl\"}${test2 ? \"\" : \"bad token\"}`);\r\n    }\r\n    return test1 && test2;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return a human-readable string for this object\r\n   * @returns {string}\r\n   */\r\n  toString() {\r\n    return `[MicroCOMPS: ${this.opts.baseUrl}/${humanizeToken(this.opts.token)}]`;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Return the version of the MicroCOMPS library\r\n   * @returns {string} - the semver for the library\r\n   */\r\n  getVersion() {\r\n    return VERSION\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  // Static utility methods\r\n  // These methods are used during MicroCOMPS startup to glean host, token, and\r\n  // simId information from outside sources.\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Static helper function that tries to derive a baseUrl from a number of\r\n   * possible sources. Always returns a valid baseUrl.\r\n   * @static\r\n   * @returns {string} - a baseUrl, e.g. \"https://comps.idmod.org\"\r\n   */\r\n  static findBaseUrl() {\r\n    let result = undefined;\r\n\r\n    // Here we successively look for a COMPS baseUrl. Any stage that works\r\n    // short circuits the rest.\r\n\r\n    // Case 1: Are we running in Node where there's no 'window' or 'document'?\r\n    if (typeof window === \"undefined\") {\r\n      // We're in Node or something, so there's no URL or cookie, and the user\r\n      // has not specified a baseUrl in the options, so use a default\r\n      result = \"https://\" + kDefaultBaseHostname;\r\n    }\r\n\r\n    // Case 2: If the baseUrl was provided as an URL param, use that\r\n    if (!result) {\r\n      const params = new URLSearchParams(window.location.search);\r\n      result = params.get(\"baseUrl\");\r\n      if (result)\r\n        result = decodeURIComponent(result);   // Null if not found\r\n    }\r\n\r\n    // Case 3: Nothing specified, so conjure a baseUrl based on window.location\r\n    if (!result) {\r\n      let host = window.location.host;\r\n      if (isLocalhost(host)) {\r\n        // Must be a developer, so just point at dev, and preserve protocol\r\n        result = `${window.location.protocol}//${kDefaultDevBaseHostname}`;\r\n      } else {\r\n        // Not a developer, o see if it is one of the known COMPS hosts\r\n        if (window.location.hostname.startsWith(\"comps\"))\r\n          result = window.location.origin;  // e.g. \"https://comps-dev.idmod.org\"\r\n      }\r\n    }\r\n\r\n    // Case 4: We tried everything we can think of, default to prod.\r\n    if (!result) {\r\n      result = \"https://\" + kDefaultBaseHostname;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Static helper method that tries to find a COMPS token in the cookie.\r\n   * Accesses document, so this method won't work from node.js.\r\n   * @static\r\n   * @param {string} userBaseUrl - OPTIONAL if provided, the baseUrl to use,\r\n   * otherwise the parsed url will be used to find the baseUrl.\r\n   * @returns {(string|null)} - the COMPS token, or null\r\n   */\r\n  static findToken(userBaseUrl) {\r\n    let result = null;    // The COMPS-auth convention is null for non-tokens\r\n\r\n    // Here we successively look for a COMPS token. Any stage that works short\r\n    // circuits the rest.\r\n\r\n    // Case 1: Are we running in Node where there's no 'window' or 'document'?\r\n    if (typeof window === \"undefined\") {\r\n      return result;    // If running in node, construct with a token\r\n    }\r\n\r\n    // Case 2: If the token was provided as an URL param\r\n    /*if (!result)*/ {\r\n      const params = new URLSearchParams(window.location.search);\r\n      result = params.get(\"token\");\r\n      if (result)\r\n        result = decodeURIComponent(result);   // Null if not found\r\n    }\r\n\r\n    // Case 3: If there's a COMPS cookie, use that token\r\n    if (!result) {\r\n      let baseUrl = userBaseUrl ? userBaseUrl : MicroCOMPS.findBaseUrl();\r\n      let hostname;\r\n      try { hostname = new URL(baseUrl).hostname; }\r\n      catch(err) {\r\n        logError(err);\r\n        return null;\r\n      }\r\n      // may be null\r\n      let token = getCookie(`Token-${hostname}`, null, MicroCOMPS.kDecode);\r\n      if (token)\r\n        result = token;\r\n    }\r\n\r\n    // We tried everything, return what we found, or null\r\n    return result;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Look for *any* COMPS token, in production, then dev, then localhost order.\r\n   * Returns the first found viable (baseUrl, token) combo, else null. This\r\n   * method is present because it is useful for tests.\r\n   * @returns {[{string},{string}]|[null,null]} - [baseUrl, token] or null\r\n   */\r\n  static findAnyToken() {\r\n    // Here we look for a COMPS token by iterating over hosts in a preset order\r\n    // Of note: The cookie keys substitute '.' for ':' so I do that here too.\r\n    let hosts = [\"comps.idmod.org\", \"comp2.idmod.org\", \"comps-dev.idmod.org\",\r\n      \"localhost:41523\", \"127.0.0.1:41523\"];\r\n    for (let host of hosts) {\r\n      const key = `Token-${host.replace(\":\", \".\")}`;\r\n      let token = getCookie(key, null, MicroCOMPS.kDecode);\r\n      if (token) {\r\n        let protocol = host.startsWith(\"localhost\") ? \"http\" : \"https\";\r\n        if (token)\r\n          return [`${protocol}://${host}`, token];\r\n      } else if (typeof window !== \"undefined\" && \"comps_instance\" in window) {\r\n        // Try using postMessage if it looks like we're in COMPS\r\n        window.comps_instance.postMessage({\r\n          get: \"comps.auth.getTokenAsync\",\r\n          observer: window.location.href,\r\n          callback: \"onSendToken\"\r\n        });\r\n      }\r\n    }\r\n    return [null, null];\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Static helper method that tries to find a simId in the URL and\r\n   * selected-entity in the cookie.\r\n   * @static\r\n   * @returns {(string|undefined)} - GUID sim id or undefined\r\n   */\r\n  static findSimId() {\r\n    if (typeof window === \"undefined\")\r\n      return;\r\n    let simId;\r\n    const params = new URLSearchParams(window.location.search);\r\n    simId = params.get(\"simId\");\r\n    if (!simId) {\r\n      simId = undefined;\r\n      let hostEntity = getCookie(\"selected-entity\", null);\r\n      try {\r\n        if (hostEntity) hostEntity = JSON.parse(hostEntity);\r\n        if (hostEntity && hostEntity.entity === kSim)\r\n          simId = hostEntity.id;\r\n      } catch(e) {}\r\n    }\r\n    return simId;\r\n  }\r\n\r\n  //----------------------------------------------------------------------------\r\n  /**\r\n   * Handle incoming messages from COMPS. This only happens after we make a\r\n   * postMessage call to COMPS. Currently there's only one call, but if you add\r\n   * more, put a switch on the message\r\n   * @param evt\r\n   * @private\r\n   */\r\n  _onCOMPSMessage(evt) {\r\n    const resp = get(evt, \"data.response\");\r\n    if (resp)\r\n      this.opts.token = resp;\r\n  }\r\n\r\n} // class MicroCOMPS\r\n//------------------------------------------------------------------------------\r\n// In the past Babel has had some trouble with 'export default class ...', but\r\n// worked with exports at the end of the file, so I'm using that convention.\r\nexport {MicroCOMPS};\r\n"],"names":["log","logInfo","logError","assign","Cookies"],"mappings":"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"}